{
  "version": "0.1",
  "provider": {
    "name": "unifi",
    "description": "The Unifi Provider can be used to manage network infrastructure from a Unifi Controller.",
    "schema": {
      "attributes": [
        {
          "name": "host",
          "string": {
            "description": "The host address of the Unifi Controller.",
            "optional_required": "required"
          }
        },
        {
          "name": "api_key",
          "string": {
            "description": "The API Key to use to connect to the Unifi Controller.",
            "optional_required": "required",
            "sensitive": true
          }
        },
        {
          "name": "allow_insecure",
          "bool": {
            "description": "Allow insecure connections to the Unifi Controller by not checking for things like self signed certificates. Don't use in Production.",
            "optional_required": "optional"
          }
        }
      ]
    }
  },
  "datasources": [
    {
      "name": "account",
      "description": "`unifi_account` data source can be used to retrieve an Account by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Account to lookup.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Account.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "password",
            "string": {
              "description": "The password of the Account.",
              "computed_optional_required": "computed",
              "sensitive": true
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Account is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "tunnel_type",
            "int64": {
              "description": "See RFC2868 section 3.1. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "tunnel_medium_type",
            "int64": {
              "description": "See RFC2868 section 3.2. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "ID of the network for the Account.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "accounts",
      "description": "`unifi_accounts` data source can be used to retrieve a list of Accounts associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Accounts are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "accounts",
            "list_nested": {
              "description": "The list of Accounts associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Account.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Account.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "password",
                    "string": {
                      "description": "The password of the Account.",
                      "computed_optional_required": "computed",
                      "sensitive": true
                    }
                  },
                  {
                    "name": "tunnel_type",
                    "int64": {
                      "description": "See RFC2868 section 3.1. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "tunnel_medium_type",
                    "int64": {
                      "description": "See RFC2868 section 3.2. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "network_id",
                    "string": {
                      "description": "ID of the network for the Account.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "ap_group",
      "description": "`unifi_ap_group` data source can be used to retrieve an AP Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the AP Group to look up.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this AP Group.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the AP Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "device_macs",
            "list": {
              "description": "The MAC addresses of the APs associated with this AP Group.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "ap_groups",
      "description": "`unifi_ap_groups` data source can be used to retrieve a list of AP Groups associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the AP Groups are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "ap_groups",
            "list_nested": {
              "description": "The list of AP Groups associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the AP Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the AP Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "device_macs",
                    "list": {
                      "description": "The MAC addresses of the APs associated with the AP Group.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "device",
      "description": "`unifi_device` data source can be used to retrieve a Device by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Device to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Device.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Device is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "mac",
            "string": {
              "description": "The MAC address of the Device. This can be specified so that the provider can take control of a device (since devices are created through adoption).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "disabled",
            "bool": {
              "description": "Specifies whether this device should be disabled.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "port_overrides",
            "list_nested": {
              "description": "Settings overrides for the specific switch ports.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Human-readable name of the port.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "number",
                    "int64": {
                      "description": "Switch port number.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "port_profile_id",
                    "string": {
                      "description": "ID of the Port Profile used on this port.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "op_mode",
                    "string": {
                      "description": "Operating mode of the port, valid values are `switch`, `mirror`, and `aggregate`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "poe_mode",
                    "string": {
                      "description": "PoE mode of the port, valid values are `auto`, `pasv24`, `passthrough`, and `off`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "aggregate_num_ports",
                    "int64": {
                      "description": "Number of ports in the aggregate.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "devices",
      "description": "`unifi_devices` data source can be used to retrieve a list of Devices associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Devices are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "devices",
            "list_nested": {
              "description": "The list of Devices associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Device.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Device.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac",
                    "string": {
                      "description": "The MAC address of the Device. This can be specified so that the provider can take control of a device (since devices are created through adoption).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "disabled",
                    "bool": {
                      "description": "Specifies whether this device should be disabled.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "port_overrides",
                    "list_nested": {
                      "description": "Settings overrides for specific switch ports.",
                      "computed_optional_required": "computed",
                      "nested_object": {
                        "attributes": [
                          {
                            "name": "name",
                            "string": {
                              "description": "Human-readable name of the port.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "number",
                            "int64": {
                              "description": "Switch port number.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "port_profile_id",
                            "string": {
                              "description": "ID of the Port Profile used on this port.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "op_mode",
                            "string": {
                              "description": "Operating mode of the port, valid values are `switch`, `mirror`, and `aggregate`.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "poe_mode",
                            "string": {
                              "description": "PoE mode of the port, valid values are `auto`, `pasv24`, `passthrough`, and `off`.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "aggregate_num_ports",
                            "int64": {
                              "description": "Number of ports in the aggregate.",
                              "computed_optional_required": "computed"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "dynamic_dns",
      "description": "`unifi_dynamic_dns` data source can be used to retrieve a Dynamic DNS by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Dynamic DNS to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Dynamic DNS is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "interface",
            "string": {
              "description": "The interface for the Dynamic DNS. Can be `wan` or `wan2`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "service",
            "string": {
              "description": "The Dynamic DNS service provider, various values are supported (for example `dyndns`, etc.).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "host_name",
            "string": {
              "description": "The host name to update in the Dynamic DNS service.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "server",
            "string": {
              "description": "The server for the Dynamic DNS service",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "login",
            "string": {
              "description": "The login username for the Dynamic DNS service.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "password",
            "string": {
              "description": "The password for the Dynamic DNS service.",
              "computed_optional_required": "computed",
              "sensitive": true
            }
          }
        ]
      }
    },
    {
      "name": "dynamic_dnses",
      "description": "`unifi_dynamic_dnses` data source can be used to retrieve a list of Dynamic DNSes associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Dynamic DNSes are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "dynamic_dnses",
            "list_nested": {
              "description": "The list of Dynamic DNSes associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Dynamic DNS.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "interface",
                    "string": {
                      "description": "The interface for the Dynamic DNS. Can be `wan` or `wan2`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "service",
                    "string": {
                      "description": "The Dynamic DNS service provider, various values are supported (for example `dyndns`, etc.).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "host_name",
                    "string": {
                      "description": "The host name to update in the Dynamic DNS service.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "server",
                    "string": {
                      "description": "The server for the Dynamic DNS service.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "login",
                    "string": {
                      "description": "The login username for the Dynamic DNS service.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "password",
                    "string": {
                      "description": "The password for the Dynamic DNS service.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "firewall_group",
      "description": "`unifi_firewall_group` data source can be used to retrieve a Firewall Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Firewall Group to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The name of the site the Firewall Group is associated with.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Firewall Group.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "type",
            "string": {
              "description": "The type of the Firewall Group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "members",
            "list": {
              "description": "The members of the Firewall Group.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "firewall_groups",
      "description": "`unifi_firewall_groups` data source can be used to retrieve a list of Firewall Groups associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Groups are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "firewall_groups",
            "list_nested": {
              "description": "The list of Firewall Groups associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Firewall Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "site_id",
                    "string": {
                      "description": "The name of the site the Firewall Groups are associated with.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Firewall Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "type",
                    "string": {
                      "description": "The type of the Firewall Group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "members",
                    "list": {
                      "description": "The members of the Firewall Group.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "firewall_rule",
      "description": "`unifi_firewall_rule` data source can be used to retrieve a Firewall Rule by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Firewall Rule to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Rule is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The ID of the site the Firewall Rule is associated with.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "action",
            "string": {
              "description": "The action of the Firewall Rule. Must be one of `drop`, `accept`, or `reject`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_address",
            "string": {
              "description": "The destination address of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_address_ipv6",
            "string": {
              "description": "The IPv6 destination address of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_firewall_group_ids",
            "list": {
              "description": "The destination Firewall Group IDs of the Firewall Rule.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_network_id",
            "string": {
              "description": "The destination network ID of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_network_type",
            "string": {
              "description": "The destination network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_port",
            "string": {
              "description": "The destination port for the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Specifies whether the Firewall Rule should be enabled.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "icmp_typename",
            "string": {
              "description": "ICMP type name.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "icmp_v6_typename",
            "string": {
              "description": "ICMPv6 type name.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ip_sec",
            "string": {
              "description": "Specify whether the Firewall Rule matches on IPSec packets. Can be one of `match-ipset` or `match-none`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "logging",
            "bool": {
              "description": "Enable logging for the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "protocol",
            "string": {
              "description": "The protocol of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "protocol_v6",
            "string": {
              "description": "The IPv6 protocol of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "protocol_match_excepted",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ruleset",
            "string": {
              "description": "The ruleset for the Firewall Rule. This is from the perspective of the security gateway. Must be one of `WAN_IN`, `WAN_OUT`, `LAN_IN`, `LAN_OUT`, `LAN_LOCAL`, `GUEST_IN`, `GUEST_OUT`, `GUEST_LOCAL`, `WANv6_IN`, `WANv6_OUT`, `WANv6_LOCAL`, `LANv6_IN`, `LANv6_OUT`, `LANv6_LOCAL`, `GUESTv6_IN`, `GUESTv6_OUT`, or `GUESTv6_LOCAL`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "rule_index",
            "int64": {
              "description": "The index of the Firewall Rule. Must be >= 20000 < 30000 or >= 40000 < 50000.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Firewall Rule. Valid values are: `auto` and `manual`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_address",
            "string": {
              "description": "The source address for the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_address_ipv6",
            "string": {
              "description": "The IPv6 source address for the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_firewall_group_ids",
            "list": {
              "description": "The source Firewall Group IDs for the Firewall Rule.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_mac",
            "string": {
              "description": "The source MAC address of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_network_id",
            "string": {
              "description": "The source network ID for the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_network_type",
            "string": {
              "description": "The source network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_port",
            "string": {
              "description": "The source port of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "state_established",
            "bool": {
              "description": "Match where the state is established.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "state_invalid",
            "bool": {
              "description": "Match where the state is invalid.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "state_new",
            "bool": {
              "description": "Match where the state is new.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "state_related",
            "bool": {
              "description": "Match where the state is related.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "firewall_rules",
      "description": "`unifi_firewall_rules` data source can be used to retrieve a list of Firewall Rules associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Rules are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "firewall_rules",
            "list_nested": {
              "description": "The list of Firewall Rules associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "site_id",
                    "string": {
                      "description": "The ID of the site the Firewall Rule is associated with.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "action",
                    "string": {
                      "description": "The action of the Firewall Rule. Must be one of `drop`, `accept`, or `reject`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_address",
                    "string": {
                      "description": "The destination address of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_address_ipv6",
                    "string": {
                      "description": "The IPv6 destination address of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_firewall_group_ids",
                    "list": {
                      "description": "The destination Firewall Group IDs of the Firewall Rule.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_network_id",
                    "string": {
                      "description": "The destination network ID of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_network_type",
                    "string": {
                      "description": "The destination network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_port",
                    "string": {
                      "description": "The destination port for the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "enabled",
                    "bool": {
                      "description": "Specifies whether the Firewall Rule should be enabled.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "icmp_typename",
                    "string": {
                      "description": "ICMP type name.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "icmp_v6_typename",
                    "string": {
                      "description": "ICMPv6 type name.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ip_sec",
                    "string": {
                      "description": "Specify whether the Firewall Rule matches on IPSec packets. Can be one of `match-ipset` or `match-none`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "logging",
                    "bool": {
                      "description": "Enable logging for the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "protocol",
                    "string": {
                      "description": "The protocol of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "protocol_v6",
                    "string": {
                      "description": "The IPv6 protocol of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "protocol_match_excepted",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ruleset",
                    "string": {
                      "description": "The ruleset for the Firewall Rule. This is from the perspective of the security gateway. Must be one of `WAN_IN`, `WAN_OUT`, `LAN_IN`, `LAN_OUT`, `LAN_LOCAL`, `GUEST_IN`, `GUEST_OUT`, `GUEST_LOCAL`, `WANv6_IN`, `WANv6_OUT`, `WANv6_LOCAL`, `LANv6_IN`, `LANv6_OUT`, `LANv6_LOCAL`, `GUESTv6_IN`, `GUESTv6_OUT`, or `GUESTv6_LOCAL`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "rule_index",
                    "int64": {
                      "description": "The index of the Firewall Rule. Must be >= 20000 < 30000 or >= 40000 < 50000.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "setting_preference",
                    "string": {
                      "description": "Specifies the setting preference for the Firewall Rule. Valid values are: `auto` and `manual`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_address",
                    "string": {
                      "description": "The source address for the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_address_ipv6",
                    "string": {
                      "description": "The IPv6 source address for the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_firewall_group_ids",
                    "list": {
                      "description": "The source Firewall Group IDs for the Firewall Rule.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_mac",
                    "string": {
                      "description": "The source MAC address of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_network_id",
                    "string": {
                      "description": "The source network ID for the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_network_type",
                    "string": {
                      "description": "The source network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_port",
                    "string": {
                      "description": "The source port of the Firewall Rule.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "state_established",
                    "bool": {
                      "description": "Match where the state is established.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "state_invalid",
                    "bool": {
                      "description": "Match where the state is invalid.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "state_new",
                    "bool": {
                      "description": "Match where the state is new.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "state_related",
                    "bool": {
                      "description": "Match where the state is related.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "network",
      "description": "`unifi_network` data source can be used to retrieve a Network by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Network.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Network is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The ID of the site the Network is associated with.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "auto_scale_enabled",
            "bool": {
              "description": "Whether or not to enable auto scaling on the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_start",
            "string": {
              "description": "The IPv4 address where the DHCP range of addresses start.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_stop",
            "string": {
              "description": "The IPv4 address where the DHCP range of addresses stop.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_enabled",
            "bool": {
              "description": "Whether DHCP is enabled or not on the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_lease_time",
            "int64": {
              "description": "Lease time for DHCP addresses.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_dns",
            "list": {
              "description": "IPv4 addresses for the DNS server to be returned from the DHCP server.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_dns_enabled",
            "bool": {
              "description": "Whether or not to enable DNS for DHCP.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_guard_enabled",
            "bool": {
              "description": "Whether or not to enable DHCP Guard.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_relay_enabled",
            "bool": {
              "description": "Whether or not to enable a DHCP Relay server.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_boot_enabled",
            "bool": {
              "description": "Toggles on the DHCP boot options. Will be set to true if you have `dhcpd_boot_filename`, and `dhcpd_boot_server` set.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_boot_server",
            "string": {
              "description": "IPv4 address of a TFTP server to network boot from.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_boot_filename",
            "string": {
              "description": "The file to PXE boot from on the `dhcpd_boot_server`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_conflict_checking",
            "bool": {
              "description": "Whether or not to enable DHCPd Conflict Checking.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_gateway_enabled",
            "bool": {
              "description": "Whether or not to enable DHCPd Gateway.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_ntp_enabled",
            "bool": {
              "description": "Whether or not to enable NTP for DHCPd.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_tftp_server",
            "string": {
              "description": "Specifies the TFTP server for DHCPd.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_time_offset_enabled",
            "bool": {
              "description": "Whether or not to enable Time Offset for DHCPd.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_unifi_controller",
            "string": {
              "description": "Specifies the Unifi Controller for DHCPd.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_wins_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_wpad_url",
            "string": {
              "description": "Specifies the WPAd URL for DHCPd.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_allow_slaac",
            "bool": {
              "description": "Whether or not to allow slaac with DHCP v6.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_dns",
            "list": {
              "description": "Specifies the IPv6 addresses for the DNS server to be returned from the DHCP server. Used if `dhcp_v6_dns_auto` is set to `false`.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_dns_auto",
            "bool": {
              "description": "Specifies DNS source to propagate. If set `false` the entries in `dhcp_v6_dns` are used, the upstream entries otherwise.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_enabled",
            "bool": {
              "description": "Enable stateful DHCPv6 for static configuration.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_lease_time",
            "int64": {
              "description": "Specifies the lease time for DHCPv6 addresses.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_start",
            "string": {
              "description": "Start address of the DHCPv6 range. Used in static DHCPv6 configuration.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_v6_stop",
            "string": {
              "description": "End address of the DHCPv6 range. Used in static DHCPv6 configuration.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "domain_name",
            "string": {
              "description": "The domain name of the network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Whether or not to enable the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "gateway_type",
            "string": {
              "description": "Specifies the Gateway type.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "igmp_snooping",
            "bool": {
              "description": "Specifies whether IGMP snooping is enabled or not.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "internet_access_enabled",
            "bool": {
              "description": "Specifies whether internet access is enabled for the Network or not.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_pd_auto_prefixid_enabled",
            "bool": {
              "description": "Whether or not to enable IPv6 Auto Prefix ID.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_client_address_assignment",
            "string": {
              "description": "Specifies the client address assignment for IPv6",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_enabled",
            "bool": {
              "description": "Whether or not to enable IPv6.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_interface_type",
            "string": {
              "description": "Specifies which type of IPv6 connection to use. Must be one of either `static`, `pd`, or `none`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_static_subnet",
            "string": {
              "description": "Specifies the static IPv6 subnet (when `ipv6_interface_type` is `static`).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_pd_interface",
            "string": {
              "description": "Specifies which WAN interface to use for IPv6 PD. Must be one of either `wan` or `wan2`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_pd_prefixid",
            "string": {
              "description": "Specifies the IPv6 Prefix ID.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_pd_start",
            "string": {
              "description": "Start address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_pd_stop",
            "string": {
              "description": "End address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_ra_enabled",
            "bool": {
              "description": "Specifies whether to enable router advertisements or not.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_ra_preferred_lifetime",
            "int64": {
              "description": "Lifetime in which the address can be used. Address becomes deprecated afterwards. Must be lower than or equal to `ipv6_ra_valid_lifetime`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_ra_priority",
            "string": {
              "description": "IPv6 router advertisement priority. Must be one of either `high`, `medium`, or `low`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_ra_valid_lifetime",
            "int64": {
              "description": "Total lifetime in which the address can be used. Must be equal to or greater than `ipv6_ra_preferred_lifetime`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ipv6_setting_preference",
            "string": {
              "description": "Specifies the setting preference for IPv6.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "lte_lan_enabled",
            "bool": {
              "description": "Whether or not to enable LTE LAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "multicast_dns_enabled",
            "bool": {
              "description": "Specifies whether Multicast DNS (mDNS) is enabled or not on the Network (Controller >=v7).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "nat_outbound_ip_addresses",
            "list_nested": {
              "description": "Specifies the outbound IP address pool for NAT.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "ip_address",
                    "string": {
                      "description": "Specifies a single IP address to use for outbound NAT. Used when `mode` is set to `ip_address`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ip_address_pool",
                    "list": {
                      "description": "Specifies a list of IP addresses to use for outbound NAT. Used when `mode` is set to `ip_address_pool`.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mode",
                    "string": {
                      "description": "Specifies the mode for outbound NAT. Can be one of `all`, `ip_address`, or `ip_address_pool`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_network_group",
                    "string": {
                      "description": "Specifies the WAN network group that the outbound NAT is associated with. Can be one of `WAN`, `WAN2`.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "network_group",
            "string": {
              "description": "The group of the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "network_isolation_enabled",
            "bool": {
              "description": "Specifies whether network isolation is enabled for the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "purpose",
            "string": {
              "description": "The purpose of the Network. One of `corporate`, `guest`, `wan`, or `vlan-only`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "subnet",
            "string": {
              "description": "The subnet of the Network (CIDR address).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "upnp_lan_enabled",
            "bool": {
              "description": "Whether or not to enable UPnP LAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "vlan_id",
            "int64": {
              "description": "The VLAN ID of the Network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "vlan_enabled",
            "bool": {
              "description": "Whether or not to enable VLAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_ip",
            "string": {
              "description": "The IPv4 address of the WAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_netmask",
            "string": {
              "description": "The IPv4 netmask of the WAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_gateway",
            "string": {
              "description": "The IPv4 gateway of the WAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_dns",
            "list": {
              "description": "DNS servers IPs of the WAN.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_type",
            "string": {
              "description": "Specifies the IPv4 WAN connection type. One of either `disabled`, `static`, `dhcp`, or `pppoe`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_network_group",
            "string": {
              "description": "Specifies the WAN network group. One of either `WAN`, `WAN2`, or `WAN_LTE_FAILOVER`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_egress_qos",
            "int64": {
              "description": "Specifies the WAN egress quality of service.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_username",
            "string": {
              "description": "Specifies the IPv4 WAN username.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_password",
            "string": {
              "description": "Specifies the IPv4 WAN password.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_type_v6",
            "string": {
              "description": "Specifies the IPv6 WAN connection type. Must be one of either `disabled`, `static`, or `dhcpv6`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_dhcp_v6_pd_size",
            "int64": {
              "description": "Specifies the IPv6 prefix size to request from ISP. Must be a number between 48 and 64.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_ipv6",
            "string": {
              "description": "The IPv6 address of the WAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_gateway_v6",
            "string": {
              "description": "The IPv6 gateway of the WAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wan_prefixlen",
            "int64": {
              "description": "The IPv6 prefix length of the WAN. Must be a number between 1 and 128.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "networks",
      "description": "`unifi_networks` data source can be used to retrieve a list of Networks associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Networks are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "networks",
            "list_nested": {
              "description": "The list of Networks associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "site_id",
                    "string": {
                      "description": "The ID of the site the Network is associated with.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "auto_scale_enabled",
                    "bool": {
                      "description": "Whether or not to enable auto scaling on the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_start",
                    "string": {
                      "description": "The IPv4 address where the DHCP range of addresses start.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_stop",
                    "string": {
                      "description": "The IPv4 address where the DHCP range of addresses stop.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_enabled",
                    "bool": {
                      "description": "Whether DHCP is enabled or not on the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_lease_time",
                    "int64": {
                      "description": "Lease time for DHCP addresses.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_dns",
                    "list": {
                      "description": "IPv4 addresses for the DNS server to be returned from the DHCP server.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_dns_enabled",
                    "bool": {
                      "description": "Whether or not to enable DNS for DHCP.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_guard_enabled",
                    "bool": {
                      "description": "Whether or not to enable DHCP Guard.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_relay_enabled",
                    "bool": {
                      "description": "Whether or not to enable a DHCP Relay server.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_boot_enabled",
                    "bool": {
                      "description": "Toggles on the DHCP boot options. Will be set to true if you have `dhcpd_boot_filename`, and `dhcpd_boot_server` set.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_boot_server",
                    "string": {
                      "description": "IPv4 address of a TFTP server to network boot from.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_boot_filename",
                    "string": {
                      "description": "The file to PXE boot from on the `dhcpd_boot_server`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_conflict_checking",
                    "bool": {
                      "description": "Whether or not to enable DHCPd Conflict Checking.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_gateway_enabled",
                    "bool": {
                      "description": "Whether or not to enable DHCPd Gateway.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_ntp_enabled",
                    "bool": {
                      "description": "Whether or not to enable NTP for DHCPd.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_tftp_server",
                    "string": {
                      "description": "Specifies the TFTP server for DHCPd.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_time_offset_enabled",
                    "bool": {
                      "description": "Whether or not to enable Time Offset for DHCPd.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_unifi_controller",
                    "string": {
                      "description": "Specifies the Unifi Controller for DHCPd.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_wins_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_wpad_url",
                    "string": {
                      "description": "Specifies the WPAd URL for DHCPd.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_allow_slaac",
                    "bool": {
                      "description": "Whether or not to allow slaac with DHCP v6.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_dns",
                    "list": {
                      "description": "Specifies the IPv6 addresses for the DNS server to be returned from the DHCP server. Used if `dhcp_v6_dns_auto` is set to `false`.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_dns_auto",
                    "bool": {
                      "description": "Specifies DNS source to propagate. If set `false` the entries in `dhcp_v6_dns` are used, the upstream entries otherwise.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_enabled",
                    "bool": {
                      "description": "Enable stateful DHCPv6 for static configuration.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_lease_time",
                    "int64": {
                      "description": "Specifies the lease time for DHCPv6 addresses.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_start",
                    "string": {
                      "description": "Start address of the DHCPv6 range. Used in static DHCPv6 configuration.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dhcp_v6_stop",
                    "string": {
                      "description": "End address of the DHCPv6 range. Used in static DHCPv6 configuration.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "domain_name",
                    "string": {
                      "description": "The domain name of the network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "enabled",
                    "bool": {
                      "description": "Whether or not to enable the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "gateway_type",
                    "string": {
                      "description": "Specifies the Gateway type.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "igmp_snooping",
                    "bool": {
                      "description": "Specifies whether IGMP snooping is enabled or not.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "internet_access_enabled",
                    "bool": {
                      "description": "Specifies whether internet access is enabled for the Network or not.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_pd_auto_prefixid_enabled",
                    "bool": {
                      "description": "Whether or not to enable IPv6 Auto Prefix ID.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_client_address_assignment",
                    "string": {
                      "description": "Specifies the client address assignment for IPv6",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_enabled",
                    "bool": {
                      "description": "Whether or not to enable IPv6.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_interface_type",
                    "string": {
                      "description": "Specifies which type of IPv6 connection to use. Must be one of either `static`, `pd`, or `none`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_static_subnet",
                    "string": {
                      "description": "Specifies the static IPv6 subnet (when `ipv6_interface_type` is `static`).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_pd_interface",
                    "string": {
                      "description": "Specifies which WAN interface to use for IPv6 PD. Must be one of either `wan` or `wan2`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_pd_prefixid",
                    "string": {
                      "description": "Specifies the IPv6 Prefix ID.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_pd_start",
                    "string": {
                      "description": "Start address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_pd_stop",
                    "string": {
                      "description": "End address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_ra_enabled",
                    "bool": {
                      "description": "Specifies whether to enable router advertisements or not.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_ra_preferred_lifetime",
                    "int64": {
                      "description": "Lifetime in which the address can be used. Address becomes deprecated afterwards. Must be lower than or equal to `ipv6_ra_valid_lifetime`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_ra_priority",
                    "string": {
                      "description": "IPv6 router advertisement priority. Must be one of either `high`, `medium`, or `low`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_ra_valid_lifetime",
                    "int64": {
                      "description": "Total lifetime in which the address can be used. Must be equal to or greater than `ipv6_ra_preferred_lifetime`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ipv6_setting_preference",
                    "string": {
                      "description": "Specifies the setting preference for IPv6.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "lte_lan_enabled",
                    "bool": {
                      "description": "Whether or not to enable LTE LAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "multicast_dns_enabled",
                    "bool": {
                      "description": "Specifies whether Multicast DNS (mDNS) is enabled or not on the Network (Controller >=v7).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "nat_outbound_ip_addresses",
                    "list_nested": {
                      "description": "Specifies the outbound IP address pool for NAT.",
                      "computed_optional_required": "computed",
                      "nested_object": {
                        "attributes": [
                          {
                            "name": "ip_address",
                            "string": {
                              "description": "Specifies a single IP address to use for outbound NAT. Used when `mode` is set to `ip_address`.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "ip_address_pool",
                            "list": {
                              "description": "Specifies a list of IP addresses to use for outbound NAT. Used when `mode` is set to `ip_address_pool`.",
                              "element_type": {
                                "string": {}
                              },
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "mode",
                            "string": {
                              "description": "Specifies the mode for outbound NAT. Can be one of `all`, `ip_address`, or `ip_address_pool`.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "wan_network_group",
                            "string": {
                              "description": "Specifies the WAN network group that the outbound NAT is associated with. Can be one of `WAN`, `WAN2`.",
                              "computed_optional_required": "computed"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "name": "network_group",
                    "string": {
                      "description": "The group of the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "network_isolation_enabled",
                    "bool": {
                      "description": "Specifies whether network isolation is enabled for the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "purpose",
                    "string": {
                      "description": "The purpose of the Network. One of `corporate`, `guest`, `wan`, or `vlan-only`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "setting_preference",
                    "string": {
                      "description": "Specifies the setting preference for the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "subnet",
                    "string": {
                      "description": "The subnet of the Network (CIDR address).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "upnp_lan_enabled",
                    "bool": {
                      "description": "Whether or not to enable UPnP LAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "vlan_id",
                    "int64": {
                      "description": "The VLAN ID of the Network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "vlan_enabled",
                    "bool": {
                      "description": "Whether or not to enable VLAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_ip",
                    "string": {
                      "description": "The IPv4 address of the WAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_netmask",
                    "string": {
                      "description": "The IPv4 netmask of the WAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_gateway",
                    "string": {
                      "description": "The IPv4 gateway of the WAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_dns",
                    "list": {
                      "description": "DNS servers IPs of the WAN.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_type",
                    "string": {
                      "description": "Specifies the IPv4 WAN connection type. One of either `disabled`, `static`, `dhcp`, or `pppoe`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_network_group",
                    "string": {
                      "description": "Specifies the WAN network group. One of either `WAN`, `WAN2`, or `WAN_LTE_FAILOVER`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_egress_qos",
                    "int64": {
                      "description": "Specifies the WAN egress quality of service.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_username",
                    "string": {
                      "description": "Specifies the IPv4 WAN username.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_password",
                    "string": {
                      "description": "Specifies the IPv4 WAN password.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_type_v6",
                    "string": {
                      "description": "Specifies the IPv6 WAN connection type. Must be one of either `disabled`, `static`, or `dhcpv6`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_dhcp_v6_pd_size",
                    "int64": {
                      "description": "Specifies the IPv6 prefix size to request from ISP. Must be a number between 48 and 64.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_ipv6",
                    "string": {
                      "description": "The IPv6 address of the WAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_gateway_v6",
                    "string": {
                      "description": "The IPv6 gateway of the WAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wan_prefixlen",
                    "int64": {
                      "description": "The IPv6 prefix length of the WAN. Must be a number between 1 and 128.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "port_forward",
      "description": "`unifi_port_forward` data source can be used to retrieve a Port Forward by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Port Forward to look up.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Port Forward.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Forward is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Port Forward is associated with.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dst_port",
            "string": {
              "description": "The destination port for the Port Forward.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Specifies whether the Port Forward rule is enabled or not.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "fwd_ip",
            "string": {
              "description": "The IPv4 address to forward the traffic to.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "fwd_port",
            "string": {
              "description": "The port to forward traffic to.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "log",
            "bool": {
              "description": "Specifies whether to log forwarded traffic or not.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "port_forward_interface",
            "string": {
              "description": "The Port Forward interface. Can be `wan`, `wan2`, or `both`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "protocol",
            "string": {
              "description": "The protocol for the Port Forward rule. Can be `tcp`, `udp`, or `tcp_udp`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "src_ip",
            "string": {
              "description": "The source IPv4 address (or CIDR) of the Port Forward rule. For all traffic specify `any`.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "port_forwards",
      "description": "`unifi_port_forwards` data source can be used to retrieve a list of Port Forwards associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Forwards are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "port_forwards",
            "list_nested": {
              "description": "The list of Port Forwards associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Port Forward to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Port Forward.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dst_port",
                    "string": {
                      "description": "The destination port for the Port Forward.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "enabled",
                    "bool": {
                      "description": "Specifies whether the Port Forward rule is enabled or not.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "fwd_ip",
                    "string": {
                      "description": "The IPv4 address to forward the traffic to.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "fwd_port",
                    "string": {
                      "description": "The port to forward traffic to.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "log",
                    "bool": {
                      "description": "Specifies whether to log forwarded traffic or not.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "port_forward_interface",
                    "string": {
                      "description": "The Port Forward interface. Can be `wan`, `wan2`, or `both`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "protocol",
                    "string": {
                      "description": "The protocol for the Port Forward rule. Can be `tcp`, `udp`, or `tcp_udp`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "src_ip",
                    "string": {
                      "description": "The source IPv4 address (or CIDR) of the Port Forward rule. For all traffic specify `any`.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "port_profile",
      "description": "`unifi_port_profile` data source can be used to retrieve a Port Profile by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Port Profile to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this Port Profile",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Profile is associated with.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "port_profiles",
      "description": "`unifi_port_profiles` data source can be used to retrieve a list of Port Profiles associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Profiles are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "port_profiles",
            "list_nested": {
              "description": "The list of Port Profiles associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Port Profile to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of this Port Profile",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "radius_profile",
      "description": "`unifi_radius_profile` data source can be used to retrieve a RADIUS Profile by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of this RADIUS Profile.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this RADIUS Profile.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the RADIUS Profile is associated with.",
              "computed_optional_required": "required"
            }
          }
        ]
      }
    },
    {
      "name": "radius_profiles",
      "description": "`unifi_radius_profile` data source can be used to retrieve a list of RADIUS Profiles associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the RADIUS Profiles are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "radius_profiles",
            "list_nested": {
              "description": "The list of RADIUS Profiles associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of this RADIUS Profile.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of this RADIUS Profile.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "setting_mgmt",
      "description": "`unifi_setting_mmgt` data source can be used to retrieve a Setting Management by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting Management.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting Management is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "auto_upgrade",
            "bool": {
              "description": "Automatically upgrade device firmware.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ssh_enabled",
            "bool": {
              "description": "Enable SSH authentication.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ssh_keys",
            "list_nested": {
              "description": "SSH Keys.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Name of the SSH key.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "type",
                    "string": {
                      "description": "Type of the SSH key, e.g. ssh-rsa.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "key",
                    "string": {
                      "description": "Public SSH key.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "comment",
                    "string": {
                      "description": "Comment.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "setting_radius",
      "description": "`unifi_setting_radius` data source can be used to retrieve a Setting RADIUS by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting RADIUS.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting RADIUS is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "accounting_enabled",
            "bool": {
              "description": "Enable RADIUS accounting.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "accounting_port",
            "int64": {
              "description": "The port for accounting communications.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "auth_port",
            "int64": {
              "description": "The port for authentication communications.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "interim_update_interval",
            "int64": {
              "description": "Statistics will be collected from connected clients at this interval.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "tunneled_reply",
            "bool": {
              "description": "Encrypt communication between the server and the client.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "secret",
            "string": {
              "description": "RADIUS secret passphrase.",
              "computed_optional_required": "computed",
              "sensitive": true
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "RADIUS server enabled.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "setting_usg",
      "description": "`unifi_setting_usg` data source can be used to retrieve a Setting USG by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting USG.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting USG is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "multicast_dns_enabled",
            "bool": {
              "description": "Whether multicast DNS is enabled.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dhcp_relay_servers",
            "list": {
              "description": "The DHCP relay servers.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "site",
      "description": "`unifi_site` data source can be used to retrieve a Site by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Site to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Site.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "description",
            "string": {
              "description": "The description of the Site.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "sites",
      "description": "`unifi_sites` data source can be used to retrieve the list of Sites.",
      "schema": {
        "attributes": [
          {
            "name": "sites",
            "list_nested": {
              "description": "The list of Sites.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Site to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Site.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "description",
                    "string": {
                      "description": "The description of the Site.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "static_route",
      "description": "`unifi_static_route` data source can be used to retrieve a Static Route by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Static Route to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Static Route.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Static Rotue is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "network",
            "string": {
              "description": "The network subnet address.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "type",
            "string": {
              "description": "The type of Static Route. Can be `interface-route`, `nexthop-route`, or `blackhole`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "distance",
            "int64": {
              "description": "The distance of the Static Route.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "next_hop",
            "string": {
              "description": "The next hop of the Static Route (only valid for `nexthop-route` type).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "interface",
            "string": {
              "description": "The interface of the Static Route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "static_routes",
      "description": "`unifi_static_routes` data source can be used to retrieve a list of Static Routes associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Static Routes are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "static_routes",
            "list_nested": {
              "description": "The list of Static Routes associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the Static Route to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the Static Route.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "network",
                    "string": {
                      "description": "The network subnet address.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "type",
                    "string": {
                      "description": "The type of Static Route. Can be `interface-route`, `nexthop-route`, or `blackhole`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "distance",
                    "int64": {
                      "description": "The distance of the Static Route.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "next_hop",
                    "string": {
                      "description": "The next hop of the Static Route (only valid for `nexthop-route` type).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "interface",
                    "string": {
                      "description": "The interface of the Static Route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "user",
      "description": "`unifi_user` data source can be used to retrieve a User by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the User to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the User is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "user_group_id",
            "string": {
              "description": "The user group ID for the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "note",
            "string": {
              "description": "A note with additional information for the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "fixed_ip",
            "string": {
              "description": "Fixed IPv4 address set for the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "The network ID for the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "blocked",
            "bool": {
              "description": "Specifies whether the User should be blocked from the network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dev_id_override",
            "int64": {
              "description": "Override the device fingerprint.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "hostname",
            "string": {
              "description": "The hostname of the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ip",
            "string": {
              "description": "The IP address of the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "local_dns_record",
            "string": {
              "description": "The local DNS record for the User.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "mac",
            "string": {
              "description": "The MAC address of the User.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "users",
      "description": "`unifi_users` data source can be used to retrieve a list of Users associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Users are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "users",
            "list_nested": {
              "description": "The list of Users associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the User to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of this User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "user_group_id",
                    "string": {
                      "description": "The user group ID for the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "note",
                    "string": {
                      "description": "A note with additional information for the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "fixed_ip",
                    "string": {
                      "description": "Fixed IPv4 address set for the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "network_id",
                    "string": {
                      "description": "The network ID for the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "blocked",
                    "bool": {
                      "description": "Specifies whether the User should be blocked from the network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dev_id_override",
                    "int64": {
                      "description": "Override the device fingerprint.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "hostname",
                    "string": {
                      "description": "The hostname of the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ip",
                    "string": {
                      "description": "The IP address of the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "local_dns_record",
                    "string": {
                      "description": "The local DNS record for the User.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac",
                    "string": {
                      "description": "The MAC address of the User.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "user_group",
      "description": "`unifi_user_group` data source can be used to retrieve a User Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the User Group to look up.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this User Group.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the User Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "qos_rate_max_down",
            "int64": {
              "description": "QOS max download rate for the User Group.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "qos_rate_max_up",
            "int64": {
              "description": "QOS max upload rate for the User Group.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "user_groups",
      "description": "`unifi_user_groups` data source can be used to retrieve a list of User Groups associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the User Groups are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "user_groups",
            "list_nested": {
              "description": "The list of User Groups associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the User Group to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of this User Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "qos_rate_max_down",
                    "int64": {
                      "description": "QOS max download rate for the User Group.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "qos_rate_max_up",
                    "int64": {
                      "description": "QOS max upload rate for the User Group.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "name": "wlan",
      "description": "`unifi_wlan` data source can be used to retrieve a WLAN by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the WLAN to look up.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the WLAN is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The name of the site the WLAN is associated with.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the WLAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ap_group_ids",
            "list": {
              "description": "IDs of the AP groups to use for the network.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "ap_group_mode",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `all`, `groups`, and `devices`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "b_supported",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "broadcast_filter_list",
            "list": {
              "description": "TODO: Figure out what this is.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "bss_transition",
            "bool": {
              "description": "Improves client transitions between APs when they have a weak signal.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dtim_6e",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dtim_2g",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dtim_5g",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "dtim_mode",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `default` and `custom`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Indicates whether or not to enable this WLAN.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "enhanced_iot",
            "bool": {
              "description": "Indicates whether or not to enable enhanced handling for IoT devices.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "fast_roaming_enabled",
            "bool": {
              "description": "Enables 802.11r fast roaming.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "group_rekey",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "hide_ssid",
            "bool": {
              "description": "Indicates whether or not to hide the SSID from broadcast.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "hotspot2conf_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "is_guest",
            "bool": {
              "description": "Indicates that this is a guest WLAN and should use guest behaviors.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "iapp_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "iapp_key",
            "string": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "l2_isolation",
            "bool": {
              "description": "Isolates stations on layer 2 (ethernet) level.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "mac_filter_enabled",
            "bool": {
              "description": "Indicates whether or not the MAC filter is turned on for the network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "mac_filter_list",
            "list": {
              "description": "List of MAC addresses to filter (only valid if `mac_filter_enabled` is `true`).",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "mac_filter_policy",
            "string": {
              "description": "MAC address filter policy (only valid if `mac_filter_enabled` is `true`). Valid values are: `allow` and `deny`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_2g_advertising_rates",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_2g_data_rate_enabled",
            "bool": {
              "description": "Indicates whether or not to enable minimum data rates for 2G band.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_2g_data_rate_kbps",
            "int64": {
              "description": "Set minimum data rate control for 2G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_5g_advertising_rates",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_5g_data_rate_enabled",
            "bool": {
              "description": "Indicates whether or not to enable minimum data rates for 5G band.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_5g_data_rate_kbps",
            "int64": {
              "description": "Set minimum data rate control for 5G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "minimum_data_rate_setting_preference",
            "string": {
              "description": "Specifies the minimum data rate setting preference. Valid values are: `auto` or `manual`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "mlo_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "multicast_enhance_enabled",
            "bool": {
              "description": "Indicates whether or not Multicast Enhance is turned on for the network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "ID of the network for this SSID.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "no2ghz_oui",
            "bool": {
              "description": "Notify high performance clients to move to 5GHz to improve network performance.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "optimize_iot_wifi_connectivity",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "passphrase",
            "string": {
              "description": "The passphrase for the network. This is only required if `security` is not set to `open`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "passphrase_autogenerated",
            "bool": {
              "description": "Indicates whether or not to autogenerate the passphrase.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "pmf_mode",
            "string": {
              "description": "Enable Protected Management Frames. This cannot be disabled if using WPA 3. Valid values are `required`, `optional` and `disabled`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "private_preshared_keys",
            "list_nested": {
              "description": "List of private preshared keys (only valid if `private_preshared_keys_enabled` is `true`).",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "network_id",
                    "string": {
                      "description": "The ID of the Network associated with the Preshared Key.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "password",
                    "string": {
                      "description": "The password of the Preshared Key.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "private_preshared_keys_enabled",
            "bool": {
              "description": "Indicates whether or not to enable private preshared keys.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "proxy_arp",
            "bool": {
              "description": "Reduces airtime usage by allowing APs to \"proxy\" common broadcast frames as unicast.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "radius_das_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "radius_mac_auth_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "radius_mac_acl_format",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `none_lower`, `hyphen_lower`, `colon_lower`, `none_upper`, `hyphen_upper`, and `colon_upper`",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "radius_profile_id",
            "string": {
              "description": "ID of the RADIUS profile to use when security `wpaeap`. You can query this via `unifi_radius_profile` data source.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "sae_groups",
            "list": {
              "description": "TODO: Figure out what this is.",
              "element_type": {
                "int64": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "sae_psks",
            "list_nested": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "Id of the SAE Psk.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac",
                    "string": {
                      "description": "MAC Address of the SAE Psk.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "psk",
                    "string": {
                      "description": "Psk of the SAE Psk.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "vlan",
                    "int64": {
                      "description": "VLAN for this SAE Psk.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "schedule",
            "list_nested": {
              "description": "Start and stop schedules for the WLAN.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Name of the block.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "day_of_week",
                    "string": {
                      "description": "Day of week for the block. Valid values are `sun`, `mon`, `tue`, `wed`, `thu`, `fri`, `sat`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "start_hour",
                    "int64": {
                      "description": "Start hour for the block (0-23).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "start_minute",
                    "int64": {
                      "description": "Start minute for the block (0-59).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "duration",
                    "int64": {
                      "description": "Length of the block in minutes.",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "security",
            "string": {
              "description": "The type of WiFi security for this network. Valid values are: `wpapsk`, `wpaeap`, and `open`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Network. Valid values are: `auto` or `manual`",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "uapsd_enabled",
            "bool": {
              "description": "Enable Unscheduled Automatic Power Save Delivery.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "user_group_id",
            "string": {
              "description": "Id of the user group to use for this network.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wlan_band",
            "string": {
              "description": "Radio band your WiFi network will use. Valid values are: `2g`, `5g`, or `both`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wlan_bands",
            "list": {
              "description": "List of bands to use for this WLAN. Valid items are: `2g`, `5g` and/or `6g`. (`6g` only works if the specified AP's are compatible)",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa_enc",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `auto`, `ccmp`, `gcmp`, `ccmp-256`, and `gcmp-256`.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa_mode",
            "string": {
              "description": "Specifies the mode of WPA. Valid values are: `auto`, `wpa1`, and `wpa2`",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa3_enhanced_192",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa3_fast_roaming",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa3_support",
            "bool": {
              "description": "Enable WPA 3 support (security must be `wpapsk` and PMF must be turned on).",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "wpa3_transition",
            "bool": {
              "description": "Enable WPA 3 and WPA 2 support (security must be `wpapsk` and `wpa3_support` must be true).",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "wlans",
      "description": "`unifi_wlans` data source can be used to retrieve a list of WLANs associated with a site.",
      "schema": {
        "attributes": [
          {
            "name": "site",
            "string": {
              "description": "The name of the site the WLANs are associated with.",
              "computed_optional_required": "optional"
            }
          },
          {
            "name": "wlans",
            "list_nested": {
              "description": "The list of WLANs associated with the site.",
              "computed_optional_required": "computed",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "The ID of the WLAN to look up.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "site_id",
                    "string": {
                      "description": "The name of the site the WLAN is associated with.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "name",
                    "string": {
                      "description": "The name of the WLAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ap_group_ids",
                    "list": {
                      "description": "IDs of the AP groups to use for the network.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "ap_group_mode",
                    "string": {
                      "description": "TODO: Figure out what this is. Valid values are: `all`, `groups`, and `devices`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "b_supported",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "broadcast_filter_list",
                    "list": {
                      "description": "TODO: Figure out what this is.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "bss_transition",
                    "bool": {
                      "description": "Improves client transitions between APs when they have a weak signal.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dtim_6e",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dtim_2g",
                    "int64": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dtim_5g",
                    "int64": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "dtim_mode",
                    "string": {
                      "description": "TODO: Figure out what this is. Valid values are: `default` and `custom`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "enabled",
                    "bool": {
                      "description": "Indicates whether or not to enable this WLAN.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "enhanced_iot",
                    "bool": {
                      "description": "Indicates whether or not to enable enhanced handling for IoT devices.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "fast_roaming_enabled",
                    "bool": {
                      "description": "Enables 802.11r fast roaming.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "group_rekey",
                    "int64": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "hide_ssid",
                    "bool": {
                      "description": "Indicates whether or not to hide the SSID from broadcast.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "hotspot2conf_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "is_guest",
                    "bool": {
                      "description": "Indicates that this is a guest WLAN and should use guest behaviors.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "iapp_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "iapp_key",
                    "string": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "l2_isolation",
                    "bool": {
                      "description": "Isolates stations on layer 2 (ethernet) level.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac_filter_enabled",
                    "bool": {
                      "description": "Indicates whether or not the MAC filter is turned on for the network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac_filter_list",
                    "list": {
                      "description": "List of MAC addresses to filter (only valid if `mac_filter_enabled` is `true`).",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mac_filter_policy",
                    "string": {
                      "description": "MAC address filter policy (only valid if `mac_filter_enabled` is `true`). Valid values are: `allow` and `deny`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_2g_advertising_rates",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_2g_data_rate_enabled",
                    "bool": {
                      "description": "Indicates whether or not to enable minimum data rates for 2G band.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_2g_data_rate_kbps",
                    "int64": {
                      "description": "Set minimum data rate control for 2G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_5g_advertising_rates",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_5g_data_rate_enabled",
                    "bool": {
                      "description": "Indicates whether or not to enable minimum data rates for 5G band.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_5g_data_rate_kbps",
                    "int64": {
                      "description": "Set minimum data rate control for 5G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "minimum_data_rate_setting_preference",
                    "string": {
                      "description": "Specifies the minimum data rate setting preference. Valid values are: `auto` or `manual`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "mlo_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "multicast_enhance_enabled",
                    "bool": {
                      "description": "Indicates whether or not Multicast Enhance is turned on for the network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "network_id",
                    "string": {
                      "description": "ID of the network for this SSID.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "no2ghz_oui",
                    "bool": {
                      "description": "Notify high performance clients to move to 5GHz to improve network performance.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "optimize_iot_wifi_connectivity",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "passphrase",
                    "string": {
                      "description": "The passphrase for the network. This is only required if `security` is not set to `open`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "passphrase_autogenerated",
                    "bool": {
                      "description": "Indicates whether or not to autogenerate the passphrase.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "pmf_mode",
                    "string": {
                      "description": "Enable Protected Management Frames. This cannot be disabled if using WPA 3. Valid values are `required`, `optional` and `disabled`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "private_preshared_keys",
                    "list_nested": {
                      "description": "List of private preshared keys (only valid if `private_preshared_keys_enabled` is `true`).",
                      "computed_optional_required": "computed",
                      "nested_object": {
                        "attributes": [
                          {
                            "name": "network_id",
                            "string": {
                              "description": "The ID of the Network associated with the Preshared Key.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "password",
                            "string": {
                              "description": "The password of the Preshared Key.",
                              "computed_optional_required": "computed"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "name": "private_preshared_keys_enabled",
                    "bool": {
                      "description": "Indicates whether or not to enable private preshared keys.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "proxy_arp",
                    "bool": {
                      "description": "Reduces airtime usage by allowing APs to \"proxy\" common broadcast frames as unicast.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "radius_das_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "radius_mac_auth_enabled",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "radius_mac_acl_format",
                    "string": {
                      "description": "TODO: Figure out what this is. Valid values are: `none_lower`, `hyphen_lower`, `colon_lower`, `none_upper`, `hyphen_upper`, and `colon_upper`",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "radius_profile_id",
                    "string": {
                      "description": "ID of the RADIUS profile to use when security `wpaeap`. You can query this via `unifi_radius_profile` data source.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "sae_groups",
                    "list": {
                      "description": "TODO: Figure out what this is.",
                      "element_type": {
                        "int64": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "sae_psks",
                    "list_nested": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed",
                      "nested_object": {
                        "attributes": [
                          {
                            "name": "id",
                            "string": {
                              "description": "Id of the SAE Psk.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "mac",
                            "string": {
                              "description": "MAC Address of the SAE Psk.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "psk",
                            "string": {
                              "description": "Psk of the SAE Psk.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "vlan",
                            "int64": {
                              "description": "VLAN for this SAE Psk.",
                              "computed_optional_required": "computed"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "name": "schedule",
                    "list_nested": {
                      "description": "Start and stop schedules for the WLAN.",
                      "computed_optional_required": "computed",
                      "nested_object": {
                        "attributes": [
                          {
                            "name": "name",
                            "string": {
                              "description": "Name of the block.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "day_of_week",
                            "string": {
                              "description": "Day of week for the block. Valid values are `sun`, `mon`, `tue`, `wed`, `thu`, `fri`, `sat`.",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "start_hour",
                            "int64": {
                              "description": "Start hour for the block (0-23).",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "start_minute",
                            "int64": {
                              "description": "Start minute for the block (0-59).",
                              "computed_optional_required": "computed"
                            }
                          },
                          {
                            "name": "duration",
                            "int64": {
                              "description": "Length of the block in minutes.",
                              "computed_optional_required": "computed"
                            }
                          }
                        ]
                      }
                    }
                  },
                  {
                    "name": "security",
                    "string": {
                      "description": "The type of WiFi security for this network. Valid values are: `wpapsk`, `wpaeap`, and `open`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "setting_preference",
                    "string": {
                      "description": "Specifies the setting preference for the Network. Valid values are: `auto` or `manual`",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "uapsd_enabled",
                    "bool": {
                      "description": "Enable Unscheduled Automatic Power Save Delivery.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "user_group_id",
                    "string": {
                      "description": "Id of the user group to use for this network.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wlan_band",
                    "string": {
                      "description": "Radio band your WiFi network will use. Valid values are: `2g`, `5g`, or `both`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wlan_bands",
                    "list": {
                      "description": "List of bands to use for this WLAN. Valid items are: `2g`, `5g` and/or `6g`. (`6g` only works if the specified AP's are compatible)",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa_enc",
                    "string": {
                      "description": "TODO: Figure out what this is. Valid values are: `auto`, `ccmp`, `gcmp`, `ccmp-256`, and `gcmp-256`.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa_mode",
                    "string": {
                      "description": "Specifies the mode of WPA. Valid values are: `auto`, `wpa1`, and `wpa2`",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa3_enhanced_192",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa3_fast_roaming",
                    "bool": {
                      "description": "TODO: Figure out what this is.",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa3_support",
                    "bool": {
                      "description": "Enable WPA 3 support (security must be `wpapsk` and PMF must be turned on).",
                      "computed_optional_required": "computed"
                    }
                  },
                  {
                    "name": "wpa3_transition",
                    "bool": {
                      "description": "Enable WPA 3 and WPA 2 support (security must be `wpapsk` and `wpa3_support` must be true).",
                      "computed_optional_required": "computed"
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  ],
  "resources": [
    {
      "name": "account",
      "description": "`unifi_account` data source can be used to retrieve an Account by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Account to lookup.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Account is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Account is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Account.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "password",
            "string": {
              "description": "The password of the Account.",
              "computed_optional_required": "computed_optional",
              "sensitive": true
            }
          },
          {
            "name": "tunnel_type",
            "int64": {
              "description": "See RFC2868 section 3.1. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "tunnel_medium_type",
            "int64": {
              "description": "See RFC2868 section 3.2. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "ID of the network for the Account.",
              "computed_optional_required": "computed"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Account.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "ap_group",
      "description": "`unifi_ap_group` data source can be used to retrieve an AP Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the AP Group to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the AP Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this AP Group.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "device_macs",
            "list": {
              "description": "The MAC addresses of the APs associated with this AP Group.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "required"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the AP Group.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "device",
      "description": "`unifi_device` data source can be used to retrieve a Device by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Device to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Device is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Device is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Device.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "mac",
            "string": {
              "description": "The MAC address of the Device. This can be specified so that the provider can take control of a device (since devices are created through adoption).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "disabled",
            "bool": {
              "description": "Specifies whether this device should be disabled.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "port_overrides",
            "list_nested": {
              "description": "Settings overrides for the specific switch ports.",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Human-readable name of the port.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "number",
                    "int64": {
                      "description": "Switch port number.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "port_profile_id",
                    "string": {
                      "description": "ID of the Port Profile used on this port.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "op_mode",
                    "string": {
                      "description": "Operating mode of the port, valid values are `switch`, `mirror`, and `aggregate`.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                              }
                            ],
                            "schema_definition": "stringvalidator.OneOf(\"switch\", \"mirror\", \"aggregate\")"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "poe_mode",
                    "string": {
                      "description": "PoE mode of the port, valid values are `auto`, `pasv24`, `passthrough`, and `off`.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                              }
                            ],
                            "schema_definition": "stringvalidator.OneOf(\"auto\", \"pasv24\", \"passthrough\", \"off\")"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "aggregate_num_ports",
                    "int64": {
                      "description": "Number of ports in the aggregate.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                              }
                            ],
                            "schema_definition": "int64validator.Between(2, 8)"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "allow_adoption",
            "bool": {
              "description": "Specifies whether this resource should tell the controller to adopt the device on create.",
              "computed_optional_required": "computed_optional",
              "default": {
                "static": true
              }
            }
          },
          {
            "name": "forget_on_destroy",
            "bool": {
              "description": "Specifies whether this resource should tell the controller to forget the device on destroy.",
              "computed_optional_required": "computed_optional",
              "default": {
                "static": true
              }
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Device.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "dynamic_dns",
      "description": "`unifi_dynamic_dns` data source can be used to retrieve a Dynamic DNS by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Dynamic DNS to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Dynamic DNS is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Dynamic DNS is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "interface",
            "string": {
              "description": "The interface for the Dynamic DNS. Can be `wan` or `wan2`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"wan\", \"wan2\")"
                  }
                }
              ]
            }
          },
          {
            "name": "service",
            "string": {
              "description": "The Dynamic DNS service provider, various values are supported (for example `dyndns`, etc.).",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"afraid\", \"changeip\", \"cloudflare\", \"cloudxns\", \"ddnss\", \"dhis\", \"dnsexit\", \"dnsomatic\", \"dnspark\", \"dnspod\", \"dslreports\", \"dtdns\", \"duckdns\", \"duiadns\", \"dyn\", \"dyndns\", \"dynv6\", \"easydns\", \"freemyip\", \"googledomains\", \"loopia\", \"namecheap\", \"noip\", \"nsupdate\", \"ovh\", \"sitelutions\", \"spdyn\", \"strato\", \"tunnelbroker\", \"zoneedit\", \"custom\")"
                  }
                }
              ]
            }
          },
          {
            "name": "host_name",
            "string": {
              "description": "The host name to update in the Dynamic DNS service.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "server",
            "string": {
              "description": "The server for the Dynamic DNS service",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "login",
            "string": {
              "description": "The login username for the Dynamic DNS service.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "password",
            "string": {
              "description": "The password for the Dynamic DNS service.",
              "computed_optional_required": "computed_optional",
              "sensitive": true
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Dynamic DNS.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "firewall_group",
      "description": "`unifi_firewall_group` data source can be used to retrieve a Firewall Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Firewall Group to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The ID of the site the Firewall Group is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Firewall Group.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "type",
            "string": {
              "description": "The type of the Firewall Group. Must be one of: `address-group`, `port-group`, or `ipv6-address-group`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"address-group\", \"port-group\", \"ipv6-address-group\")"
                  }
                }
              ]
            }
          },
          {
            "name": "members",
            "list": {
              "description": "The members of the Firewall Group.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Firewall Group.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "firewall_rule",
      "description": "`unifi_firewall_rule` data source can be used to retrieve a Firewall Rule by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Firewall Rule to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Firewall Rule is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Firewall Rule is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Firewall Rule.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "action",
            "string": {
              "description": "The action of the Firewall Rule. Must be one of `drop`, `accept`, or `reject`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"drop\", \"accept\", \"reject\")"
                  }
                }
              ]
            }
          },
          {
            "name": "dst_address",
            "string": {
              "description": "The destination address of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dst_address_ipv6",
            "string": {
              "description": "The IPv6 destination address of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dst_firewall_group_ids",
            "list": {
              "description": "The destination Firewall Group IDs of the Firewall Rule.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dst_network_id",
            "string": {
              "description": "The destination network ID of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dst_network_type",
            "string": {
              "description": "The destination network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"ADDRv4\", \"NETv4\")"
                  }
                }
              ]
            }
          },
          {
            "name": "dst_port",
            "string": {
              "description": "The destination port for the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Specifies whether the Firewall Rule should be enabled.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "icmp_typename",
            "string": {
              "description": "ICMP type name.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "icmp_v6_typename",
            "string": {
              "description": "ICMPv6 type name.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ip_sec",
            "string": {
              "description": "Specify whether the Firewall Rule matches on IPSec packets. Can be one of `match-ipset` or `match-none`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"match-ipset\", \"match-none\")"
                  }
                }
              ]
            }
          },
          {
            "name": "logging",
            "bool": {
              "description": "Enable logging for the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "protocol",
            "string": {
              "description": "The protocol of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "protocol_v6",
            "string": {
              "description": "The IPv6 protocol of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "protocol_match_excepted",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ruleset",
            "string": {
              "description": "The ruleset for the Firewall Rule. This is from the perspective of the security gateway. Must be one of `WAN_IN`, `WAN_OUT`, `LAN_IN`, `LAN_OUT`, `LAN_LOCAL`, `GUEST_IN`, `GUEST_OUT`, `GUEST_LOCAL`, `WANv6_IN`, `WANv6_OUT`, `WANv6_LOCAL`, `LANv6_IN`, `LANv6_OUT`, `LANv6_LOCAL`, `GUESTv6_IN`, `GUESTv6_OUT`, or `GUESTv6_LOCAL`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"WAN_IN\", \"WAN_OUT\", \"LAN_IN\", \"LAN_OUT\", \"LAN_LOCAL\", \"GUEST_IN\", \"GUEST_OUT\", \"GUEST_LOCAL\", \"WANv6_IN\", \"WANv6_OUT\", \"WANv6_LOCAL\", \"LANv6_IN\", \"LANv6_OUT\", \"LANv6_LOCAL\", \"GUESTv6_IN\", \"GUESTv6_OUT\", \"GUESTv6_LOCAL\")"
                  }
                }
              ]
            }
          },
          {
            "name": "rule_index",
            "int64": {
              "description": "The index of the Firewall Rule. Must be >= 20000 < 30000 or >= 40000 < 50000.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.Any(int64validator.Between(20000, 29999), int64validator.Between(40000, 49999))"
                  }
                }
              ]
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Firewall Rule. Valid values are: `auto` and `manual`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"auto\", \"manual\")"
                  }
                }
              ]
            }
          },
          {
            "name": "src_address",
            "string": {
              "description": "The source address for the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "src_address_ipv6",
            "string": {
              "description": "The IPv6 source address for the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "src_firewall_group_ids",
            "list": {
              "description": "The source Firewall Group IDs for the Firewall Rule.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "src_mac",
            "string": {
              "description": "The source MAC address of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "src_network_id",
            "string": {
              "description": "The source network ID for the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "src_network_type",
            "string": {
              "description": "The source network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"ADDRv4\", \"NETv4\")"
                  }
                }
              ]
            }
          },
          {
            "name": "src_port",
            "string": {
              "description": "The source port of the Firewall Rule.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "state_established",
            "bool": {
              "description": "Match where the state is established.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "state_invalid",
            "bool": {
              "description": "Match where the state is invalid.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "state_new",
            "bool": {
              "description": "Match where the state is new.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "state_related",
            "bool": {
              "description": "Match where the state is related.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Firewall Rule.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "network",
      "description": "`unifi_network` data source can be used to retrieve a Network by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Network.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Network is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The ID of the site the Network is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "auto_scale_enabled",
            "bool": {
              "description": "Whether or not to enable auto scaling on the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_start",
            "string": {
              "description": "The IPv4 address where the DHCP range of addresses start.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_stop",
            "string": {
              "description": "The IPv4 address where the DHCP range of addresses stop.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_enabled",
            "bool": {
              "description": "Whether DHCP is enabled or not on the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_lease_time",
            "int64": {
              "description": "Lease time for DHCP addresses.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_dns",
            "list": {
              "description": "IPv4 addresses for the DNS server to be returned from the DHCP server.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.SizeAtMost(4)"
                  }
                }
              ]
            }
          },
          {
            "name": "dhcp_dns_enabled",
            "bool": {
              "description": "Whether or not to enable DNS for DHCP.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_guard_enabled",
            "bool": {
              "description": "Whether or not to enable DHCP Guard.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_relay_enabled",
            "bool": {
              "description": "Whether or not to enable a DHCP Relay server.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_boot_enabled",
            "bool": {
              "description": "Toggles on the DHCP boot options. Will be set to true if you have `dhcpd_boot_filename`, and `dhcpd_boot_server` set.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_boot_server",
            "string": {
              "description": "IPv4 address of a TFTP server to network boot from.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_boot_filename",
            "string": {
              "description": "The file to PXE boot from on the `dhcpd_boot_server`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_conflict_checking",
            "bool": {
              "description": "Whether or not to enable DHCPd Conflict Checking.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_gateway_enabled",
            "bool": {
              "description": "Whether or not to enable DHCPd Gateway.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_ntp_enabled",
            "bool": {
              "description": "Whether or not to enable NTP for DHCPd.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_tftp_server",
            "string": {
              "description": "Specifies the TFTP server for DHCPd.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_time_offset_enabled",
            "bool": {
              "description": "Whether or not to enable Time Offset for DHCPd.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_unifi_controller",
            "string": {
              "description": "Specifies the Unifi Controller for DHCPd.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_wins_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_wpad_url",
            "string": {
              "description": "Specifies the WPAd URL for DHCPd.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_allow_slaac",
            "bool": {
              "description": "Whether or not to allow slaac with DHCP v6.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_dns",
            "list": {
              "description": "Specifies the IPv6 addresses for the DNS server to be returned from the DHCP server. Used if `dhcp_v6_dns_auto` is set to `false`.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.SizeAtMost(4)"
                  }
                }
              ]
            }
          },
          {
            "name": "dhcp_v6_dns_auto",
            "bool": {
              "description": "Specifies DNS source to propagate. If set `false` the entries in `dhcp_v6_dns` are used, the upstream entries otherwise.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_enabled",
            "bool": {
              "description": "Enable stateful DHCPv6 for static configuration.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_lease_time",
            "int64": {
              "description": "Specifies the lease time for DHCPv6 addresses.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_start",
            "string": {
              "description": "Start address of the DHCPv6 range. Used in static DHCPv6 configuration.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_v6_stop",
            "string": {
              "description": "End address of the DHCPv6 range. Used in static DHCPv6 configuration.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "domain_name",
            "string": {
              "description": "The domain name of the network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Whether or not to enable the Network.",
              "computed_optional_required": "computed_optional",
              "default": {
                "static": true
              }
            }
          },
          {
            "name": "gateway_type",
            "string": {
              "description": "Specifies the Gateway type.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "igmp_snooping",
            "bool": {
              "description": "Specifies whether IGMP snooping is enabled or not.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "internet_access_enabled",
            "bool": {
              "description": "Specifies whether internet access is enabled for the Network or not.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_pd_auto_prefixid_enabled",
            "bool": {
              "description": "Whether or not to enable IPv6 Auto Prefix ID.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_client_address_assignment",
            "string": {
              "description": "Specifies the client address assignment for IPv6",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_enabled",
            "bool": {
              "description": "Whether or not to enable IPv6.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_interface_type",
            "string": {
              "description": "Specifies which type of IPv6 connection to use. Must be one of either `static`, `pd`, or `none`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"static\", \"pd\", \"none\")"
                  }
                }
              ]
            }
          },
          {
            "name": "ipv6_static_subnet",
            "string": {
              "description": "Specifies the static IPv6 subnet (when `ipv6_interface_type` is `static`).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_pd_interface",
            "string": {
              "description": "Specifies which WAN interface to use for IPv6 PD. Must be one of either `wan` or `wan2`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"wan\", \"wan2\")"
                  }
                }
              ]
            }
          },
          {
            "name": "ipv6_pd_prefixid",
            "string": {
              "description": "Specifies the IPv6 Prefix ID.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_pd_start",
            "string": {
              "description": "Start address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_pd_stop",
            "string": {
              "description": "End address of the DHCPv6 range. Used if `ipv6_interface_type` is set to `pd`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_ra_enabled",
            "bool": {
              "description": "Specifies whether to enable router advertisements or not.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_ra_preferred_lifetime",
            "int64": {
              "description": "Lifetime in which the address can be used. Address becomes deprecated afterwards. Must be lower than or equal to `ipv6_ra_valid_lifetime`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_ra_priority",
            "string": {
              "description": "IPv6 router advertisement priority. Must be one of either `high`, `medium`, or `low`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"high\", \"medium\", \"low\")"
                  }
                }
              ]
            }
          },
          {
            "name": "ipv6_ra_valid_lifetime",
            "int64": {
              "description": "Total lifetime in which the address can be used. Must be equal to or greater than `ipv6_ra_preferred_lifetime`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ipv6_setting_preference",
            "string": {
              "description": "Specifies the setting preference for IPv6.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "lte_lan_enabled",
            "bool": {
              "description": "Whether or not to enable LTE LAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "multicast_dns_enabled",
            "bool": {
              "description": "Specifies whether Multicast DNS (mDNS) is enabled or not on the Network (Controller >=v7).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "nat_outbound_ip_addresses",
            "list_nested": {
              "description": "Specifies the outbound IP address pool for NAT.",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "ip_address",
                    "string": {
                      "description": "Specifies a single IP address to use for outbound NAT. Used when `mode` is set to `ip_address`.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "ip_address_pool",
                    "list": {
                      "description": "Specifies a list of IP addresses to use for outbound NAT. Used when `mode` is set to `ip_address_pool`.",
                      "element_type": {
                        "string": {}
                      },
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "mode",
                    "string": {
                      "description": "Specifies the mode for outbound NAT. Can be one of `all`, `ip_address`, or `ip_address_pool`.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                              }
                            ],
                            "schema_definition": "stringvalidator.OneOf(\"all\", \"ip_address\", \"ip_address_pool\")"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "wan_network_group",
                    "string": {
                      "description": "Specifies the WAN network group that the outbound NAT is associated with. Can be one of `WAN`, `WAN2`.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                              }
                            ],
                            "schema_definition": "stringvalidator.OneOf(\"WAN\", \"WAN2\")"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "network_group",
            "string": {
              "description": "The group of the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "network_isolation_enabled",
            "bool": {
              "description": "Specifies whether network isolation is enabled for the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "purpose",
            "string": {
              "description": "The purpose of the Network. One of `corporate`, `guest`, `wan`, or `vlan-only`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"corporate\", \"guest\", \"wan\", \"vlan-only\")"
                  }
                }
              ]
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "subnet",
            "string": {
              "description": "The subnet of the Network (CIDR address).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "upnp_lan_enabled",
            "bool": {
              "description": "Whether or not to enable UPnP LAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "vlan_id",
            "int64": {
              "description": "The VLAN ID of the Network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "vlan_enabled",
            "bool": {
              "description": "Whether or not to enable VLAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_ip",
            "string": {
              "description": "The IPv4 address of the WAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_netmask",
            "string": {
              "description": "The IPv4 netmask of the WAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_gateway",
            "string": {
              "description": "The IPv4 gateway of the WAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_dns",
            "list": {
              "description": "DNS servers IPs of the WAN.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.SizeAtMost(4)"
                  }
                }
              ]
            }
          },
          {
            "name": "wan_type",
            "string": {
              "description": "Specifies the IPv4 WAN connection type. One of either `disabled`, `static`, `dhcp`, or `pppoe`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"disabled\", \"static\", \"dhcp\", \"pppoe\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wan_network_group",
            "string": {
              "description": "Specifies the WAN network group. One of either `WAN`, `WAN2`, or `WAN_LTE_FAILOVER`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"WAN\", \"WAN2\", \"WAN_LTE_FAILOVER\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wan_egress_qos",
            "int64": {
              "description": "Specifies the WAN egress quality of service.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_username",
            "string": {
              "description": "Specifies the IPv4 WAN username.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_password",
            "string": {
              "description": "Specifies the IPv4 WAN password.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_type_v6",
            "string": {
              "description": "Specifies the IPv6 WAN connection type. Must be one of either `disabled`, `static`, or `dhcpv6`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"disabled\", \"static\", \"dhcpv6\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wan_dhcp_v6_pd_size",
            "int64": {
              "description": "Specifies the IPv6 prefix size to request from ISP. Must be a number between 48 and 64.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.Between(48, 64)"
                  }
                }
              ]
            }
          },
          {
            "name": "wan_ipv6",
            "string": {
              "description": "The IPv6 address of the WAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_gateway_v6",
            "string": {
              "description": "The IPv6 gateway of the WAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wan_prefixlen",
            "int64": {
              "description": "The IPv6 prefix length of the WAN. Must be a number between 1 and 128.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.Between(1, 128)"
                  }
                }
              ]
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Network.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "port_forward",
      "description": "`unifi_port_forward` data source can be used to retrieve a Port Forward by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Port Forward to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Forward is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Port Forward is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Port Forward.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "dst_port",
            "string": {
              "description": "The destination port for the Port Forward.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Specifies whether the Port Forward rule is enabled or not.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "fwd_ip",
            "string": {
              "description": "The IPv4 address to forward the traffic to.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "fwd_port",
            "string": {
              "description": "The port to forward traffic to.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "log",
            "bool": {
              "description": "Specifies whether to log forwarded traffic or not.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "port_forward_interface",
            "string": {
              "description": "The Port Forward interface. Can be `wan`, `wan2`, or `both`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"wan\", \"wan2\", \"both\")"
                  }
                }
              ]
            }
          },
          {
            "name": "protocol",
            "string": {
              "description": "The protocol for the Port Forward rule. Can be `tcp`, `udp`, or `tcp_udp`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"tcp\", \"udp\", \"tcp_udp\")"
                  }
                }
              ]
            }
          },
          {
            "name": "src_ip",
            "string": {
              "description": "The source IPv4 address (or CIDR) of the Port Forward rule. For all traffic specify `any`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Port Forward.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "port_profile",
      "description": "`unifi_port_profile` data source can be used to retrieve a Port Profile by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Port Profile to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Port Profile is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Port Profile is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this Port Profile",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Port Profile.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "radius_profile",
      "description": "`unifi_radius_profile` data source can be used to retrieve a RADIUS Profile by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of this RADIUS Profile.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the RADIUS Profile is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the RADIUS Profile is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this RADIUS Profile.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the RADIUS Profile.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "setting_mgmt",
      "description": "`unifi_setting_mmgt` data source can be used to retrieve a Setting Management by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting Management.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting Management is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Setting Management is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "auto_upgrade",
            "bool": {
              "description": "Automatically upgrade device firmware.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ssh_enabled",
            "bool": {
              "description": "Enable SSH authentication.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ssh_keys",
            "list_nested": {
              "description": "SSH Keys.",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Name of the SSH key.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "type",
                    "string": {
                      "description": "Type of the SSH key, e.g. ssh-rsa.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "key",
                    "string": {
                      "description": "Public SSH key.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "comment",
                    "string": {
                      "description": "Comment.",
                      "computed_optional_required": "computed_optional"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Setting Management",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "setting_radius",
      "description": "`unifi_setting_radius` data source can be used to retrieve a Setting RADIUS by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting RADIUS.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting RADIUS is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Setting RADIUS is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "accounting_enabled",
            "bool": {
              "description": "Enable RADIUS accounting.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "accounting_port",
            "int64": {
              "description": "The port for accounting communications.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "auth_port",
            "int64": {
              "description": "The port for authentication communications.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "interim_update_interval",
            "int64": {
              "description": "Statistics will be collected from connected clients at this interval.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "tunneled_reply",
            "bool": {
              "description": "Encrypt communication between the server and the client.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "secret",
            "string": {
              "description": "RADIUS secret passphrase.",
              "computed_optional_required": "computed_optional",
              "sensitive": true
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "RADIUS server enabled.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Setting RADIUS.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "setting_usg",
      "description": "`unifi_setting_usg` data source can be used to retrieve a Setting USG by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Setting USG.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Setting USG is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Setting USG is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "multicast_dns_enabled",
            "bool": {
              "description": "Whether multicast DNS is enabled.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dhcp_relay_servers",
            "list": {
              "description": "The DHCP relay servers.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.SizeAtMost(5)"
                  }
                }
              ]
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the Setting USG.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "site",
      "description": "`unifi_site` data source can be used to retrieve a Site by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Site to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Site.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "description",
            "string": {
              "description": "The description of the Site.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_update",
            "string": {
              "description": "Timestamp of the last Terraform update of the Site.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "static_route",
      "description": "`unifi_static_route` data source can be used to retrieve a Static Route by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the Static Route to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the Static Rotue is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the Static Rotue is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the Static Route.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "network",
            "string": {
              "description": "The network subnet address.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "type",
            "string": {
              "description": "The type of Static Route. Can be `interface-route`, `nexthop-route`, or `blackhole`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"interface-route\", \"nexthop-route\", \"blackhole\")"
                  }
                }
              ]
            }
          },
          {
            "name": "distance",
            "int64": {
              "description": "The distance of the Static Route.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "next_hop",
            "string": {
              "description": "The next hop of the Static Route (only valid for `nexthop-route` type).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "interface",
            "string": {
              "description": "The interface of the Static Route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_update",
            "string": {
              "description": "Timestamp of the last Terraform update of the Static Route.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "user",
      "description": "`unifi_user` data source can be used to retrieve a User by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the User to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the User is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the User is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this User.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "user_group_id",
            "string": {
              "description": "The user group ID for the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "note",
            "string": {
              "description": "A note with additional information for the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "fixed_ip",
            "string": {
              "description": "Fixed IPv4 address set for the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "The network ID for the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "blocked",
            "bool": {
              "description": "Specifies whether the User should be blocked from the network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dev_id_override",
            "int64": {
              "description": "Override the device fingerprint.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "hostname",
            "string": {
              "description": "The hostname of the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ip",
            "string": {
              "description": "The IP address of the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "local_dns_record",
            "string": {
              "description": "The local DNS record for the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "mac",
            "string": {
              "description": "The MAC address of the User.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the User.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "user_group",
      "description": "`unifi_user_group` data source can be used to retrieve a User Group by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the User Group to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the User Group is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The id of the site the User Group is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of this User Group.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "qos_rate_max_down",
            "int64": {
              "description": "QOS max download rate for the User Group.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "qos_rate_max_up",
            "int64": {
              "description": "QOS max upload rate for the User Group.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the User Group.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    },
    {
      "name": "wlan",
      "description": "`unifi_wlan` data source can be used to retrieve a WLAN by ID.",
      "schema": {
        "attributes": [
          {
            "name": "id",
            "string": {
              "description": "The ID of the WLAN to look up.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "site",
            "string": {
              "description": "The name of the site the WLAN is associated with.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "site_id",
            "string": {
              "description": "The name of the site the WLAN is associated with.",
              "computed_optional_required": "computed",
              "plan_modifiers": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
                      }
                    ],
                    "schema_definition": "stringplanmodifier.UseStateForUnknown()"
                  }
                }
              ]
            }
          },
          {
            "name": "name",
            "string": {
              "description": "The name of the WLAN.",
              "computed_optional_required": "required"
            }
          },
          {
            "name": "ap_group_ids",
            "list": {
              "description": "IDs of the AP groups to use for the network.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "ap_group_mode",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `all`, `groups`, and `devices`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"all\", \"groups\", \"devices\")"
                  }
                }
              ]
            }
          },
          {
            "name": "b_supported",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "broadcast_filter_list",
            "list": {
              "description": "TODO: Figure out what this is.",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "bss_transition",
            "bool": {
              "description": "Improves client transitions between APs when they have a weak signal.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dtim_6e",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dtim_2g",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dtim_5g",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "dtim_mode",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `default` and `custom`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"default\", \"custom\")"
                  }
                }
              ]
            }
          },
          {
            "name": "enabled",
            "bool": {
              "description": "Indicates whether or not to enable this WLAN.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "enhanced_iot",
            "bool": {
              "description": "Indicates whether or not to enable enhanced handling for IoT devices.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "fast_roaming_enabled",
            "bool": {
              "description": "Enables 802.11r fast roaming.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "group_rekey",
            "int64": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "hide_ssid",
            "bool": {
              "description": "Indicates whether or not to hide the SSID from broadcast.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "hotspot2conf_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "is_guest",
            "bool": {
              "description": "Indicates that this is a guest WLAN and should use guest behaviors.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "iapp_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "iapp_key",
            "string": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "l2_isolation",
            "bool": {
              "description": "Isolates stations on layer 2 (ethernet) level.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "mac_filter_enabled",
            "bool": {
              "description": "Indicates whether or not the MAC filter is turned on for the network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "mac_filter_list",
            "list": {
              "description": "List of MAC addresses to filter (only valid if `mac_filter_enabled` is `true`).",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "mac_filter_policy",
            "string": {
              "description": "MAC address filter policy (only valid if `mac_filter_enabled` is `true`). Valid values are: `allow` and `deny`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"allow\", \"deny\")"
                  }
                }
              ]
            }
          },
          {
            "name": "minimum_2g_advertising_rates",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "minimum_2g_data_rate_enabled",
            "bool": {
              "description": "Indicates whether or not to enable minimum data rates for 2G band.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "minimum_2g_data_rate_kbps",
            "int64": {
              "description": "Set minimum data rate control for 2G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `1000`, `2000`, `5500`, `6000`, `9000`, `11000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.OneOf(0, 1000, 2000, 5500, 6000, 9000, 11000, 12000, 18000, 24000, 36000, 48000, 54000)"
                  }
                }
              ]
            }
          },
          {
            "name": "minimum_5g_advertising_rates",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "minimum_5g_data_rate_enabled",
            "bool": {
              "description": "Indicates whether or not to enable minimum data rates for 5G band.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "minimum_5g_data_rate_kbps",
            "int64": {
              "description": "Set minimum data rate control for 5G devices in Kbps. Use `0` to disable minimum data rates. Valid values are `6000`, `9000`, `12000`, `18000`, `24000`, `36000`, `48000`, and `54000`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                      }
                    ],
                    "schema_definition": "int64validator.OneOf(0, 6000, 9000, 12000, 18000, 24000, 36000, 48000, 54000)"
                  }
                }
              ]
            }
          },
          {
            "name": "minimum_data_rate_setting_preference",
            "string": {
              "description": "Specifies the minimum data rate setting preference. Valid values are: `auto` or `manual`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"auto\", \"manual\")"
                  }
                }
              ]
            }
          },
          {
            "name": "mlo_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "multicast_enhance_enabled",
            "bool": {
              "description": "Indicates whether or not Multicast Enhance is turned on for the network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "network_id",
            "string": {
              "description": "ID of the network for this SSID.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "no2ghz_oui",
            "bool": {
              "description": "Notify high performance clients to move to 5GHz to improve network performance.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "optimize_iot_wifi_connectivity",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "passphrase",
            "string": {
              "description": "The passphrase for the network. This is only required if `security` is not set to `open`.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "passphrase_autogenerated",
            "bool": {
              "description": "Indicates whether or not to autogenerate the passphrase.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "pmf_mode",
            "string": {
              "description": "Enable Protected Management Frames. This cannot be disabled if using WPA 3. Valid values are `required`, `optional` and `disabled`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"required\", \"optional\", \"disabled\")"
                  }
                }
              ]
            }
          },
          {
            "name": "private_preshared_keys",
            "list_nested": {
              "description": "List of private preshared keys (only valid if `private_preshared_keys_enabled` is `true`).",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "network_id",
                    "string": {
                      "description": "The ID of the Network associated with the Preshared Key.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "password",
                    "string": {
                      "description": "The password of the Preshared Key.",
                      "computed_optional_required": "computed_optional"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "private_preshared_keys_enabled",
            "bool": {
              "description": "Indicates whether or not to enable private preshared keys.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "proxy_arp",
            "bool": {
              "description": "Reduces airtime usage by allowing APs to \"proxy\" common broadcast frames as unicast.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "radius_das_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "radius_mac_auth_enabled",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "radius_mac_acl_format",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `none_lower`, `hyphen_lower`, `colon_lower`, `none_upper`, `hyphen_upper`, and `colon_upper`",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"none_lower\", \"hyphen_lower\", \"colon_lower\", \"none_upper\", \"hyphen_upper\", \"colon_upper\")"
                  }
                }
              ]
            }
          },
          {
            "name": "radius_profile_id",
            "string": {
              "description": "ID of the RADIUS profile to use when security `wpaeap`. You can query this via `unifi_radius_profile` data source.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "sae_groups",
            "list": {
              "description": "TODO: Figure out what this is.",
              "element_type": {
                "int64": {}
              },
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "sae_psks",
            "list_nested": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "id",
                    "string": {
                      "description": "Id of the SAE Psk.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "mac",
                    "string": {
                      "description": "MAC Address of the SAE Psk.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "psk",
                    "string": {
                      "description": "Psk of the SAE Psk.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "vlan",
                    "int64": {
                      "description": "VLAN for this SAE Psk.",
                      "computed_optional_required": "computed_optional"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "schedule",
            "list_nested": {
              "description": "Start and stop schedules for the WLAN.",
              "computed_optional_required": "computed_optional",
              "nested_object": {
                "attributes": [
                  {
                    "name": "name",
                    "string": {
                      "description": "Name of the block.",
                      "computed_optional_required": "computed_optional"
                    }
                  },
                  {
                    "name": "day_of_week",
                    "string": {
                      "description": "Day of week for the block. Valid values are `sun`, `mon`, `tue`, `wed`, `thu`, `fri`, `sat`.",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                              }
                            ],
                            "schema_definition": "stringvalidator.OneOf(\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\")"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "start_hour",
                    "int64": {
                      "description": "Start hour for the block (0-23).",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                              }
                            ],
                            "schema_definition": "int64validator.Between(0, 23)"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "start_minute",
                    "int64": {
                      "description": "Start minute for the block (0-59).",
                      "computed_optional_required": "computed_optional",
                      "validators": [
                        {
                          "custom": {
                            "imports": [
                              {
                                "path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
                              }
                            ],
                            "schema_definition": "int64validator.Between(0, 59)"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "duration",
                    "int64": {
                      "description": "Length of the block in minutes.",
                      "computed_optional_required": "computed_optional"
                    }
                  }
                ]
              }
            }
          },
          {
            "name": "security",
            "string": {
              "description": "The type of WiFi security for this network. Valid values are: `wpapsk`, `wpaeap`, and `open`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"wpapsk\", \"wpaeap\", \"open\")"
                  }
                }
              ]
            }
          },
          {
            "name": "setting_preference",
            "string": {
              "description": "Specifies the setting preference for the Network. Valid values are: `auto` or `manual`",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"auto\", \"manual\")"
                  }
                }
              ]
            }
          },
          {
            "name": "uapsd_enabled",
            "bool": {
              "description": "Enable Unscheduled Automatic Power Save Delivery.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "user_group_id",
            "string": {
              "description": "Id of the user group to use for this network.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wlan_band",
            "string": {
              "description": "Radio band your WiFi network will use. Valid values are: `2g`, `5g`, or `both`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"2g\", \"5g\", \"both\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wlan_bands",
            "list": {
              "description": "List of bands to use for this WLAN. Valid items are: `2g`, `5g` and/or `6g`. (`6g` only works if the specified AP's are compatible)",
              "element_type": {
                "string": {}
              },
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.SizeAtMost(3)"
                  }
                },
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
                      },
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "listvalidator.ValueStringsAre(stringvalidator.OneOf(\"2g\", \"5g\", \"6g\"))"
                  }
                }
              ]
            }
          },
          {
            "name": "wpa_enc",
            "string": {
              "description": "TODO: Figure out what this is. Valid values are: `auto`, `ccmp`, `gcmp`, `ccmp-256`, and `gcmp-256`.",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"auto\", \"ccmp\", \"gcmp\", \"ccmp-256\", \"gcmp-256\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wpa_mode",
            "string": {
              "description": "Specifies the mode of WPA. Valid values are: `auto`, `wpa1`, and `wpa2`",
              "computed_optional_required": "computed_optional",
              "validators": [
                {
                  "custom": {
                    "imports": [
                      {
                        "path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
                      }
                    ],
                    "schema_definition": "stringvalidator.OneOf(\"auto\", \"wpa1\", \"wpa2\")"
                  }
                }
              ]
            }
          },
          {
            "name": "wpa3_enhanced_192",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wpa3_fast_roaming",
            "bool": {
              "description": "TODO: Figure out what this is.",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wpa3_support",
            "bool": {
              "description": "Enable WPA 3 support (security must be `wpapsk` and PMF must be turned on).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "wpa3_transition",
            "bool": {
              "description": "Enable WPA 3 and WPA 2 support (security must be `wpapsk` and `wpa3_support` must be true).",
              "computed_optional_required": "computed_optional"
            }
          },
          {
            "name": "last_updated",
            "string": {
              "description": "Timestamp of the last Terraform update of the WLAN.",
              "computed_optional_required": "computed"
            }
          }
        ]
      }
    }
  ]
}
