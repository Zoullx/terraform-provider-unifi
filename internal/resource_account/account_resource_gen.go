// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_account

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func AccountResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the Account to lookup.",
				MarkdownDescription: "The ID of the Account to lookup.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
			"last_updated": schema.StringAttribute{
				Computed:            true,
				Description:         "Timestamp of the last Terraform update of the Account.",
				MarkdownDescription: "Timestamp of the last Terraform update of the Account.",
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the Account.",
				MarkdownDescription: "The name of the Account.",
			},
			"network_id": schema.StringAttribute{
				Computed:            true,
				Description:         "ID of the network for the Account.",
				MarkdownDescription: "ID of the network for the Account.",
			},
			"password": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Sensitive:           true,
				Description:         "The password of the Account.",
				MarkdownDescription: "The password of the Account.",
			},
			"site": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the site the Account is associated with.",
				MarkdownDescription: "The name of the site the Account is associated with.",
			},
			"site_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The id of the site the Account is associated with.",
				MarkdownDescription: "The id of the site the Account is associated with.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
			"tunnel_medium_type": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "See RFC2868 section 3.2. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
				MarkdownDescription: "See RFC2868 section 3.2. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
			},
			"tunnel_type": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "See RFC2868 section 3.1. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
				MarkdownDescription: "See RFC2868 section 3.1. @TODO: better documentation https://help.ui.com/hc/en-us/articles/360015268353-UniFi-USG-UDM-Configuring-RADIUS-Server#6",
			},
		},
	}
}

type AccountModel struct {
	Id               types.String `tfsdk:"id"`
	LastUpdated      types.String `tfsdk:"last_updated"`
	Name             types.String `tfsdk:"name"`
	NetworkId        types.String `tfsdk:"network_id"`
	Password         types.String `tfsdk:"password"`
	Site             types.String `tfsdk:"site"`
	SiteId           types.String `tfsdk:"site_id"`
	TunnelMediumType types.Int64  `tfsdk:"tunnel_medium_type"`
	TunnelType       types.Int64  `tfsdk:"tunnel_type"`
}
