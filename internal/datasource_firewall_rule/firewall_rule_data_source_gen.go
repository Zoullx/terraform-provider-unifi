// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_firewall_rule

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func FirewallRuleDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"action": schema.StringAttribute{
				Computed:            true,
				Description:         "The action of the Firewall Rule. Must be one of `drop`, `accept`, or `reject`.",
				MarkdownDescription: "The action of the Firewall Rule. Must be one of `drop`, `accept`, or `reject`.",
			},
			"dst_address": schema.StringAttribute{
				Computed:            true,
				Description:         "The destination address of the Firewall Rule.",
				MarkdownDescription: "The destination address of the Firewall Rule.",
			},
			"dst_address_ipv6": schema.StringAttribute{
				Computed:            true,
				Description:         "The IPv6 destination address of the Firewall Rule.",
				MarkdownDescription: "The IPv6 destination address of the Firewall Rule.",
			},
			"dst_firewall_group_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Computed:            true,
				Description:         "The destination Firewall Group IDs of the Firewall Rule.",
				MarkdownDescription: "The destination Firewall Group IDs of the Firewall Rule.",
			},
			"dst_network_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The destination network ID of the Firewall Rule.",
				MarkdownDescription: "The destination network ID of the Firewall Rule.",
			},
			"dst_network_type": schema.StringAttribute{
				Computed:            true,
				Description:         "The destination network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
				MarkdownDescription: "The destination network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
			},
			"dst_port": schema.StringAttribute{
				Computed:            true,
				Description:         "The destination port for the Firewall Rule.",
				MarkdownDescription: "The destination port for the Firewall Rule.",
			},
			"enabled": schema.BoolAttribute{
				Computed:            true,
				Description:         "Specifies whether the Firewall Rule should be enabled.",
				MarkdownDescription: "Specifies whether the Firewall Rule should be enabled.",
			},
			"icmp_typename": schema.StringAttribute{
				Computed:            true,
				Description:         "ICMP type name.",
				MarkdownDescription: "ICMP type name.",
			},
			"icmp_v6_typename": schema.StringAttribute{
				Computed:            true,
				Description:         "ICMPv6 type name.",
				MarkdownDescription: "ICMPv6 type name.",
			},
			"id": schema.StringAttribute{
				Required:            true,
				Description:         "The ID of the Firewall Rule to look up.",
				MarkdownDescription: "The ID of the Firewall Rule to look up.",
			},
			"ip_sec": schema.StringAttribute{
				Computed:            true,
				Description:         "Specify whether the Firewall Rule matches on IPSec packets. Can be one of `match-ipset` or `match-none`.",
				MarkdownDescription: "Specify whether the Firewall Rule matches on IPSec packets. Can be one of `match-ipset` or `match-none`.",
			},
			"logging": schema.BoolAttribute{
				Computed:            true,
				Description:         "Enable logging for the Firewall Rule.",
				MarkdownDescription: "Enable logging for the Firewall Rule.",
			},
			"name": schema.StringAttribute{
				Computed:            true,
				Description:         "The name of the Firewall Rule.",
				MarkdownDescription: "The name of the Firewall Rule.",
			},
			"protocol": schema.StringAttribute{
				Computed:            true,
				Description:         "The protocol of the Firewall Rule.",
				MarkdownDescription: "The protocol of the Firewall Rule.",
			},
			"protocol_match_excepted": schema.BoolAttribute{
				Computed:            true,
				Description:         "TODO: Figure out what this is.",
				MarkdownDescription: "TODO: Figure out what this is.",
			},
			"protocol_v6": schema.StringAttribute{
				Computed:            true,
				Description:         "The IPv6 protocol of the Firewall Rule.",
				MarkdownDescription: "The IPv6 protocol of the Firewall Rule.",
			},
			"rule_index": schema.Int64Attribute{
				Computed:            true,
				Description:         "The index of the Firewall Rule. Must be >= 20000 < 30000 or >= 40000 < 50000.",
				MarkdownDescription: "The index of the Firewall Rule. Must be >= 20000 < 30000 or >= 40000 < 50000.",
			},
			"ruleset": schema.StringAttribute{
				Computed:            true,
				Description:         "The ruleset for the Firewall Rule. This is from the perspective of the security gateway. Must be one of `WAN_IN`, `WAN_OUT`, `LAN_IN`, `LAN_OUT`, `LAN_LOCAL`, `GUEST_IN`, `GUEST_OUT`, `GUEST_LOCAL`, `WANv6_IN`, `WANv6_OUT`, `WANv6_LOCAL`, `LANv6_IN`, `LANv6_OUT`, `LANv6_LOCAL`, `GUESTv6_IN`, `GUESTv6_OUT`, or `GUESTv6_LOCAL`.",
				MarkdownDescription: "The ruleset for the Firewall Rule. This is from the perspective of the security gateway. Must be one of `WAN_IN`, `WAN_OUT`, `LAN_IN`, `LAN_OUT`, `LAN_LOCAL`, `GUEST_IN`, `GUEST_OUT`, `GUEST_LOCAL`, `WANv6_IN`, `WANv6_OUT`, `WANv6_LOCAL`, `LANv6_IN`, `LANv6_OUT`, `LANv6_LOCAL`, `GUESTv6_IN`, `GUESTv6_OUT`, or `GUESTv6_LOCAL`.",
			},
			"setting_preference": schema.StringAttribute{
				Computed:            true,
				Description:         "Specifies the setting preference for the Firewall Rule. Valid values are: `auto` and `manual`.",
				MarkdownDescription: "Specifies the setting preference for the Firewall Rule. Valid values are: `auto` and `manual`.",
			},
			"site": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the site the Firewall Rule is associated with.",
				MarkdownDescription: "The name of the site the Firewall Rule is associated with.",
			},
			"site_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the site the Firewall Rule is associated with.",
				MarkdownDescription: "The ID of the site the Firewall Rule is associated with.",
			},
			"src_address": schema.StringAttribute{
				Computed:            true,
				Description:         "The source address for the Firewall Rule.",
				MarkdownDescription: "The source address for the Firewall Rule.",
			},
			"src_address_ipv6": schema.StringAttribute{
				Computed:            true,
				Description:         "The IPv6 source address for the Firewall Rule.",
				MarkdownDescription: "The IPv6 source address for the Firewall Rule.",
			},
			"src_firewall_group_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Computed:            true,
				Description:         "The source Firewall Group IDs for the Firewall Rule.",
				MarkdownDescription: "The source Firewall Group IDs for the Firewall Rule.",
			},
			"src_mac": schema.StringAttribute{
				Computed:            true,
				Description:         "The source MAC address of the Firewall Rule.",
				MarkdownDescription: "The source MAC address of the Firewall Rule.",
			},
			"src_network_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The source network ID for the Firewall Rule.",
				MarkdownDescription: "The source network ID for the Firewall Rule.",
			},
			"src_network_type": schema.StringAttribute{
				Computed:            true,
				Description:         "The source network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
				MarkdownDescription: "The source network type of the Firewall Rule. Can be one of `ADDRv4` or `NETv4`.",
			},
			"src_port": schema.StringAttribute{
				Computed:            true,
				Description:         "The source port of the Firewall Rule.",
				MarkdownDescription: "The source port of the Firewall Rule.",
			},
			"state_established": schema.BoolAttribute{
				Computed:            true,
				Description:         "Match where the state is established.",
				MarkdownDescription: "Match where the state is established.",
			},
			"state_invalid": schema.BoolAttribute{
				Computed:            true,
				Description:         "Match where the state is invalid.",
				MarkdownDescription: "Match where the state is invalid.",
			},
			"state_new": schema.BoolAttribute{
				Computed:            true,
				Description:         "Match where the state is new.",
				MarkdownDescription: "Match where the state is new.",
			},
			"state_related": schema.BoolAttribute{
				Computed:            true,
				Description:         "Match where the state is related.",
				MarkdownDescription: "Match where the state is related.",
			},
		},
	}
}

type FirewallRuleModel struct {
	Action                types.String `tfsdk:"action"`
	DstAddress            types.String `tfsdk:"dst_address"`
	DstAddressIpv6        types.String `tfsdk:"dst_address_ipv6"`
	DstFirewallGroupIds   types.List   `tfsdk:"dst_firewall_group_ids"`
	DstNetworkId          types.String `tfsdk:"dst_network_id"`
	DstNetworkType        types.String `tfsdk:"dst_network_type"`
	DstPort               types.String `tfsdk:"dst_port"`
	Enabled               types.Bool   `tfsdk:"enabled"`
	IcmpTypename          types.String `tfsdk:"icmp_typename"`
	IcmpV6Typename        types.String `tfsdk:"icmp_v6_typename"`
	Id                    types.String `tfsdk:"id"`
	IpSec                 types.String `tfsdk:"ip_sec"`
	Logging               types.Bool   `tfsdk:"logging"`
	Name                  types.String `tfsdk:"name"`
	Protocol              types.String `tfsdk:"protocol"`
	ProtocolMatchExcepted types.Bool   `tfsdk:"protocol_match_excepted"`
	ProtocolV6            types.String `tfsdk:"protocol_v6"`
	RuleIndex             types.Int64  `tfsdk:"rule_index"`
	Ruleset               types.String `tfsdk:"ruleset"`
	SettingPreference     types.String `tfsdk:"setting_preference"`
	Site                  types.String `tfsdk:"site"`
	SiteId                types.String `tfsdk:"site_id"`
	SrcAddress            types.String `tfsdk:"src_address"`
	SrcAddressIpv6        types.String `tfsdk:"src_address_ipv6"`
	SrcFirewallGroupIds   types.List   `tfsdk:"src_firewall_group_ids"`
	SrcMac                types.String `tfsdk:"src_mac"`
	SrcNetworkId          types.String `tfsdk:"src_network_id"`
	SrcNetworkType        types.String `tfsdk:"src_network_type"`
	SrcPort               types.String `tfsdk:"src_port"`
	StateEstablished      types.Bool   `tfsdk:"state_established"`
	StateInvalid          types.Bool   `tfsdk:"state_invalid"`
	StateNew              types.Bool   `tfsdk:"state_new"`
	StateRelated          types.Bool   `tfsdk:"state_related"`
}
