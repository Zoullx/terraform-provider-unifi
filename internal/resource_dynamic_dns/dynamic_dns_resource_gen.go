// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_dynamic_dns

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func DynamicDnsResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"host_name": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The host name to update in the Dynamic DNS service.",
				MarkdownDescription: "The host name to update in the Dynamic DNS service.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the Dynamic DNS to look up.",
				MarkdownDescription: "The ID of the Dynamic DNS to look up.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
			"interface": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The interface for the Dynamic DNS. Can be `wan` or `wan2`.",
				MarkdownDescription: "The interface for the Dynamic DNS. Can be `wan` or `wan2`.",
				Validators: []validator.String{
					stringvalidator.OneOf("wan", "wan2"),
				},
			},
			"last_updated": schema.StringAttribute{
				Computed:            true,
				Description:         "Timestamp of the last Terraform update of the Dynamic DNS.",
				MarkdownDescription: "Timestamp of the last Terraform update of the Dynamic DNS.",
			},
			"login": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The login username for the Dynamic DNS service.",
				MarkdownDescription: "The login username for the Dynamic DNS service.",
			},
			"password": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Sensitive:           true,
				Description:         "The password for the Dynamic DNS service.",
				MarkdownDescription: "The password for the Dynamic DNS service.",
			},
			"server": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The server for the Dynamic DNS service",
				MarkdownDescription: "The server for the Dynamic DNS service",
			},
			"service": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The Dynamic DNS service provider, various values are supported (for example `dyndns`, etc.).",
				MarkdownDescription: "The Dynamic DNS service provider, various values are supported (for example `dyndns`, etc.).",
				Validators: []validator.String{
					stringvalidator.OneOf("afraid", "changeip", "cloudflare", "cloudxns", "ddnss", "dhis", "dnsexit", "dnsomatic", "dnspark", "dnspod", "dslreports", "dtdns", "duckdns", "duiadns", "dyn", "dyndns", "dynv6", "easydns", "freemyip", "googledomains", "loopia", "namecheap", "noip", "nsupdate", "ovh", "sitelutions", "spdyn", "strato", "tunnelbroker", "zoneedit", "custom"),
				},
			},
			"site": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the site the Dynamic DNS is associated with.",
				MarkdownDescription: "The name of the site the Dynamic DNS is associated with.",
			},
			"site_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The id of the site the Dynamic DNS is associated with.",
				MarkdownDescription: "The id of the site the Dynamic DNS is associated with.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
		},
	}
}

type DynamicDnsModel struct {
	HostName    types.String `tfsdk:"host_name"`
	Id          types.String `tfsdk:"id"`
	Interface   types.String `tfsdk:"interface"`
	LastUpdated types.String `tfsdk:"last_updated"`
	Login       types.String `tfsdk:"login"`
	Password    types.String `tfsdk:"password"`
	Server      types.String `tfsdk:"server"`
	Service     types.String `tfsdk:"service"`
	Site        types.String `tfsdk:"site"`
	SiteId      types.String `tfsdk:"site_id"`
}
