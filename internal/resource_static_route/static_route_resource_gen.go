// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_static_route

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func StaticRouteResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"distance": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "The distance of the Static Route.",
				MarkdownDescription: "The distance of the Static Route.",
			},
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the Static Route to look up.",
				MarkdownDescription: "The ID of the Static Route to look up.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
			"interface": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The interface of the Static Route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.",
				MarkdownDescription: "The interface of the Static Route (only valid for `interface-route` type). This can be `WAN1`, `WAN2`, or a network ID.",
			},
			"last_update": schema.StringAttribute{
				Computed:            true,
				Description:         "Timestamp of the last Terraform update of the Static Route.",
				MarkdownDescription: "Timestamp of the last Terraform update of the Static Route.",
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the Static Route.",
				MarkdownDescription: "The name of the Static Route.",
			},
			"network": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The network subnet address.",
				MarkdownDescription: "The network subnet address.",
			},
			"next_hop": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The next hop of the Static Route (only valid for `nexthop-route` type).",
				MarkdownDescription: "The next hop of the Static Route (only valid for `nexthop-route` type).",
			},
			"site": schema.StringAttribute{
				Required:            true,
				Description:         "The name of the site the Static Rotue is associated with.",
				MarkdownDescription: "The name of the site the Static Rotue is associated with.",
			},
			"site_id": schema.StringAttribute{
				Computed:            true,
				Description:         "The id of the site the Static Rotue is associated with.",
				MarkdownDescription: "The id of the site the Static Rotue is associated with.",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.UseStateForUnknown(),
				},
			},
			"type": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "The type of Static Route. Can be `interface-route`, `nexthop-route`, or `blackhole`.",
				MarkdownDescription: "The type of Static Route. Can be `interface-route`, `nexthop-route`, or `blackhole`.",
				Validators: []validator.String{
					stringvalidator.OneOf("interface-route", "nexthop-route", "blackhole"),
				},
			},
		},
	}
}

type StaticRouteModel struct {
	Distance   types.Int64  `tfsdk:"distance"`
	Id         types.String `tfsdk:"id"`
	Interface  types.String `tfsdk:"interface"`
	LastUpdate types.String `tfsdk:"last_update"`
	Name       types.String `tfsdk:"name"`
	Network    types.String `tfsdk:"network"`
	NextHop    types.String `tfsdk:"next_hop"`
	Site       types.String `tfsdk:"site"`
	SiteId     types.String `tfsdk:"site_id"`
	Type       types.String `tfsdk:"type"`
}
